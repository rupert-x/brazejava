
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava;

import java.util.List;
import java.util.Map;

import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.model.CanvasTriggerSendCreateBody;
import com.yourorg.brazejava.model.CanvasTriggerSendCreateBodyAudience;
import com.yourorg.brazejava.model.CanvasTriggerSendCreateBodyCanvasEntryProperties;
import com.yourorg.brazejava.model.CanvasTriggerSendCreateBodyRecipientsItem;
import com.yourorg.brazejava.model.CanvasTriggerSendCreateBodyRecipientsItemAttributes;
import com.yourorg.brazejava.model.CanvasTriggerSendCreateBodyRecipientsItemUserAlias;
import com.yourorg.brazejava.resources.canvas.trigger.send.params.CreateRequest;
import org.junit.jupiter.api.Test;


public final class CanvasTriggerSendTestClient {
    @Test
    void testCreate200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.canvas().trigger().send().create(CreateRequest
                                                    .builder()
                                                    .data(CanvasTriggerSendCreateBody
                                                            .builder()
                                                            .audience(CanvasTriggerSendCreateBodyAudience
                                                                    .builder()
                                                                    .and(List.of(
                                                                            Map.ofEntries(

                                                                            )
                                                                            ))
                                                                    .build())
                                                            .broadcast(true)
                                                            .canvasEntryProperties(CanvasTriggerSendCreateBodyCanvasEntryProperties
                                                                    .builder()
                                                                    .productName("string")
                                                                    .productPrice(123.45)
                                                                    .build())
                                                            .canvasId("string")
                                                            .recipients(List.of(
                                                                    CanvasTriggerSendCreateBodyRecipientsItem
                                                                    .builder()
                                                                    .attributes(CanvasTriggerSendCreateBodyRecipientsItemAttributes
                                                                            .builder()
                                                                            .firstName("string")
                                                                            .build())
                                                                    .canvasEntryProperties("string")
                                                                    .externalUserId("string")
                                                                    .sendToExistingOnly(true)
                                                                    .triggerProperties(Map.ofEntries(

                                                                            ))
                                                                    .userAlias(CanvasTriggerSendCreateBodyRecipientsItemUserAlias
                                                                            .builder()
                                                                            .aliasLabel("string")
                                                                            .aliasName("string")
                                                                            .build())
                                                                    .build()
                                                                    ))
                                                            .build())
                                                    .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
}
