
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava;

import java.util.List;

import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.model.PreferenceCenterV1CreateBody;
import com.yourorg.brazejava.model.PreferenceCenterV1CreateBodyOptions;
import com.yourorg.brazejava.model.PreferenceCenterV1UpdateBody;
import com.yourorg.brazejava.model.PreferenceCenterV1UpdateBodyRecipientItem;
import com.yourorg.brazejava.model.PreferenceCenterV1UpdateBodyTriggerProperties;
import com.yourorg.brazejava.resources.preferencecenter.v1.params.CreateRequest;
import com.yourorg.brazejava.resources.preferencecenter.v1.params.GetRequest;
import com.yourorg.brazejava.resources.preferencecenter.v1.params.UpdateRequest;
import org.junit.jupiter.api.Test;


public final class PreferenceCenterV1TestClient {
    @Test
    void testGet200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.preferenceCenter().v1().get(GetRequest
                                               .builder()
                                               .preferenceCenterExternalId("string")
                                               .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testCreate200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.preferenceCenter().v1().create(CreateRequest
                                                  .builder()
                                                  .data(PreferenceCenterV1CreateBody
                                                          .builder()
                                                          .confirmationPageHtml("string")
                                                          .name("string")
                                                          .options(PreferenceCenterV1CreateBodyOptions
                                                                  .builder()
                                                                  .metaViewportContent("string")
                                                                  .build())
                                                          .preferenceCenterPageHtml("string")
                                                          .preferenceCenterTitle("string")
                                                          .state("string")
                                                          .build())
                                                  .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testUpdate200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.preferenceCenter().v1().update(UpdateRequest
                                                  .builder()
                                                  .data(PreferenceCenterV1UpdateBody
                                                          .builder()
                                                          .externalSendId("string")
                                                          .recipient(List.of(
                                                                  PreferenceCenterV1UpdateBodyRecipientItem
                                                                  .builder()
                                                                  .externalUserId("string")
                                                                  .build()
                                                                  ))
                                                          .triggerProperties(PreferenceCenterV1UpdateBodyTriggerProperties
                                                                  .builder()
                                                                  .exampleIntegerProperty("string")
                                                                  .exampleStringProperty("string")
                                                                  .build())
                                                          .build())
                                                  .preferenceCenterExternalId("string")
                                                  .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
}
