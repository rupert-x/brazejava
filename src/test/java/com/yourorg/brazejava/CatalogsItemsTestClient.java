
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava;

import java.util.List;
import java.util.Map;

import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.model.CatalogsItemsCreate1Body;
import com.yourorg.brazejava.model.CatalogsItemsCreateBody;
import com.yourorg.brazejava.model.CatalogsItemsPatch1Body;
import com.yourorg.brazejava.model.CatalogsItemsPatchBody;
import com.yourorg.brazejava.model.CatalogsItemsPatchBodyItemsItem;
import com.yourorg.brazejava.model.CatalogsItemsUpdate1Body;
import com.yourorg.brazejava.model.CatalogsItemsUpdateBody;
import com.yourorg.brazejava.resources.catalogs.items.params.Create1Request;
import com.yourorg.brazejava.resources.catalogs.items.params.CreateRequest;
import com.yourorg.brazejava.resources.catalogs.items.params.Delete1Request;
import com.yourorg.brazejava.resources.catalogs.items.params.DeleteRequest;
import com.yourorg.brazejava.resources.catalogs.items.params.GetRequest;
import com.yourorg.brazejava.resources.catalogs.items.params.ListRequest;
import com.yourorg.brazejava.resources.catalogs.items.params.Patch1Request;
import com.yourorg.brazejava.resources.catalogs.items.params.PatchRequest;
import com.yourorg.brazejava.resources.catalogs.items.params.Update1Request;
import com.yourorg.brazejava.resources.catalogs.items.params.UpdateRequest;
import org.junit.jupiter.api.Test;


public final class CatalogsItemsTestClient {
    @Test
    void testDelete200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().delete(DeleteRequest
                                             .builder()
                                             .catalogName("string")
                                             .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testDelete1200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().delete1(Delete1Request
                                              .builder()
                                              .catalogName("string")
                                              .itemId("string")
                                              .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testList200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().list(ListRequest
                                           .builder()
                                           .catalogName("string")
                                           .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testGet200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().get(GetRequest
                                          .builder()
                                          .catalogName("string")
                                          .itemId("string")
                                          .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testPatch200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().patch(PatchRequest
                                            .builder()
                                            .data(CatalogsItemsPatchBody
                                                  .builder()
                                                  .items(List.of(
                                                          CatalogsItemsPatchBodyItemsItem
                                                          .builder()
                                                          .id("string")
                                                          .build()
                                                          ))
                                                  .build())
                                            .catalogName("string")
                                            .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testPatch1200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().patch1(Patch1Request
                                             .builder()
                                             .data(CatalogsItemsPatch1Body
                                                   .builder()
                                                   .items(List.of(
                                                           Map.ofEntries(

                                                           )
                                                           ))
                                                   .build())
                                             .catalogName("string")
                                             .itemId("string")
                                             .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testCreate200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().create(CreateRequest
                                             .builder()
                                             .data(CatalogsItemsCreateBody
                                                   .builder()
                                                   .items(List.of(
                                                           Map.ofEntries(

                                                           )
                                                           ))
                                                   .build())
                                             .catalogName("string")
                                             .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testCreate1200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().create1(Create1Request
                                              .builder()
                                              .data(CatalogsItemsCreate1Body
                                                    .builder()
                                                    .items(List.of(
                                                            Map.ofEntries(

                                                            )
                                                            ))
                                                    .build())
                                              .catalogName("string")
                                              .itemId("string")
                                              .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testUpdate200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().update(UpdateRequest
                                             .builder()
                                             .data(CatalogsItemsUpdateBody
                                                   .builder()
                                                   .items(List.of(
                                                           Map.ofEntries(

                                                           )
                                                           ))
                                                   .build())
                                             .catalogName("string")
                                             .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
    @Test
    void testUpdate1200SuccessAllParams() {
        Client client = Client
                        .builder()
                        .environment(Environment.MOCK_SERVER)
                        .withBearerAuth("API_TOKEN")
                        .build();

        try {
            client.catalogs().items().update1(Update1Request
                                              .builder()
                                              .data(CatalogsItemsUpdate1Body
                                                    .builder()
                                                    .items(List.of(
                                                            Map.ofEntries(

                                                            )
                                                            ))
                                                    .build())
                                              .catalogName("string")
                                              .itemId("string")
                                              .build());
        } catch (ApiException e) {
            System.err.println("Error msg: " + e.toString());
            throw e;
        }
    }
}
