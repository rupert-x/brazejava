
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.email.unsubscribes;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.email.unsubscribes.params.ListRequest;


public class UnsubscribesClient {
    protected final BaseClient baseClient;

    public UnsubscribesClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * Query List of Unsubscribed Email Addresses
    *
    * > Use this endpoint to return emails that have unsubscribed during the time period from `start_date` to `end_date`.
    *
    *
    * You can use this endpoint to set up a bi-directional sync between Braze and other email systems or your own database.
    *
    * To use this endpoint, you’ll need to generate an API key with the `email.unsubscribe` permission.
    *
    * **Note:** You must provide an `end_date`, as well as either an `email` or a `start_date`.
    *
    * If your date range has more than `limit` number of unsubscribes, you will need to make multiple API calls, each time increasing the `offset` until a call returns either fewer than `limit` or zero results.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Example request
    *
    * ```
    * curl --location --request GET 'https://rest.iad-01.braze.com/email/unsubscribes?start_date=2020-01-01&end_date=2020-02-01&limit=1&offset=1&sort_direction=desc&email=example@braze.com' \
    * --header 'Authorization: Bearer YOUR-API-KEY-HERE'
    *
    * ```
    *
    * ## Response
    *
    * Entries are listed in descending order.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "emails": [
    *     {
    *       "email": "example1@braze.com",
    *       "unsubscribed_at": "2016-08-25 15:24:32 +0000"
    *     },
    *     {
    *       "email": "example2@braze.com",
    *       "unsubscribed_at": "2016-08-24 17:41:58 +0000"
    *     },
    *     {
    *       "email": "example3@braze.com",
    *       "unsubscribed_at": "2016-08-24 12:01:13 +0000"
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * GET /email/unsubscribes
    */
    public Map<?, ?> list() {
        return list(ListRequest.builder().build(), null);
    }


    /**
    * Query List of Unsubscribed Email Addresses
    *
    * > Use this endpoint to return emails that have unsubscribed during the time period from `start_date` to `end_date`.
    *
    *
    * You can use this endpoint to set up a bi-directional sync between Braze and other email systems or your own database.
    *
    * To use this endpoint, you’ll need to generate an API key with the `email.unsubscribe` permission.
    *
    * **Note:** You must provide an `end_date`, as well as either an `email` or a `start_date`.
    *
    * If your date range has more than `limit` number of unsubscribes, you will need to make multiple API calls, each time increasing the `offset` until a call returns either fewer than `limit` or zero results.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Example request
    *
    * ```
    * curl --location --request GET 'https://rest.iad-01.braze.com/email/unsubscribes?start_date=2020-01-01&end_date=2020-02-01&limit=1&offset=1&sort_direction=desc&email=example@braze.com' \
    * --header 'Authorization: Bearer YOUR-API-KEY-HERE'
    *
    * ```
    *
    * ## Response
    *
    * Entries are listed in descending order.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "emails": [
    *     {
    *       "email": "example1@braze.com",
    *       "unsubscribed_at": "2016-08-25 15:24:32 +0000"
    *     },
    *     {
    *       "email": "example2@braze.com",
    *       "unsubscribed_at": "2016-08-24 17:41:58 +0000"
    *     },
    *     {
    *       "email": "example3@braze.com",
    *       "unsubscribed_at": "2016-08-24 12:01:13 +0000"
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * GET /email/unsubscribes
    */
    public Map<?, ?> list(ListRequest request) {
        return list(request, null);
    }


    /**
    * Query List of Unsubscribed Email Addresses
    *
    * > Use this endpoint to return emails that have unsubscribed during the time period from `start_date` to `end_date`.
    *
    *
    * You can use this endpoint to set up a bi-directional sync between Braze and other email systems or your own database.
    *
    * To use this endpoint, you’ll need to generate an API key with the `email.unsubscribe` permission.
    *
    * **Note:** You must provide an `end_date`, as well as either an `email` or a `start_date`.
    *
    * If your date range has more than `limit` number of unsubscribes, you will need to make multiple API calls, each time increasing the `offset` until a call returns either fewer than `limit` or zero results.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Example request
    *
    * ```
    * curl --location --request GET 'https://rest.iad-01.braze.com/email/unsubscribes?start_date=2020-01-01&end_date=2020-02-01&limit=1&offset=1&sort_direction=desc&email=example@braze.com' \
    * --header 'Authorization: Bearer YOUR-API-KEY-HERE'
    *
    * ```
    *
    * ## Response
    *
    * Entries are listed in descending order.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "emails": [
    *     {
    *       "email": "example1@braze.com",
    *       "unsubscribed_at": "2016-08-25 15:24:32 +0000"
    *     },
    *     {
    *       "email": "example2@braze.com",
    *       "unsubscribed_at": "2016-08-24 17:41:58 +0000"
    *     },
    *     {
    *       "email": "example3@braze.com",
    *       "unsubscribed_at": "2016-08-24 12:01:13 +0000"
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * GET /email/unsubscribes
    */
    public Map<?, ?> list(ListRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/email/unsubscribes")
            .addQueryParam("email", request.getEmail(), "form", true)
            .addQueryParam("end_date", request.getEndDate(), "form", true)
            .addQueryParam("limit", request.getLimit(), "form", true)
            .addQueryParam("offset", request.getOffset(), "form", true)
            .addQueryParam("sort_direction", request.getSortDirection(), "form", true)
            .addQueryParam("start_date", request.getStartDate(), "form", true)
            .method("GET")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
