
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.canvas.datasummary;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.canvas.datasummary.params.ListRequest;


public class DataSummaryClient {
    protected final BaseClient baseClient;

    public DataSummaryClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * Export Canvas Data Analytics Summary
    *
    * > Use this endpoint to export rollups of time series data for a Canvas, providing a concise summary of a Canvas’ results.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `canvas.data_summary` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "data": {
    *     "name": (string) Canvas name,
    *     "total_stats": {
    *       "revenue": (float),
    *       "conversions": (int),
    *       "conversions_by_entry_time": (int),
    *       "entries": (int)
    *     },
    *     "variant_stats": (optional) {
    *       "00000000-0000-0000-0000-0000000000000": (API identifier for variant) {
    *         "name": (string) name of variant,
    *         "revenue": (float),
    *         "conversions": (int),
    *         "entries": (int)
    *       },
    *       ... (more variants)
    *     },
    *     "step_stats": (optional) {
    *       "00000000-0000-0000-0000-0000000000000": (API identifier for step) {
    *         "name": (string) name of step,
    *         "revenue": (float),
    *         "conversions": (int),
    *         "conversions_by_entry_time": (int),
    *         "messages": {
    *           "android_push": (name of channel) [
    *             {
    *               "sent": (int),
    *               "opens": (int),
    *               "influenced_opens": (int),
    *               "bounces": (int)
    *               ... (more stats for channel)
    *             }
    *           ],
    *           ... (more channels)
    *         }
    *       },
    *       ... (more steps)
    *     }
    *   },
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
    *
    * GET /canvas/data_summary
    */
    public Map<?, ?> list() {
        return list(ListRequest.builder().build(), null);
    }


    /**
    * Export Canvas Data Analytics Summary
    *
    * > Use this endpoint to export rollups of time series data for a Canvas, providing a concise summary of a Canvas’ results.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `canvas.data_summary` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "data": {
    *     "name": (string) Canvas name,
    *     "total_stats": {
    *       "revenue": (float),
    *       "conversions": (int),
    *       "conversions_by_entry_time": (int),
    *       "entries": (int)
    *     },
    *     "variant_stats": (optional) {
    *       "00000000-0000-0000-0000-0000000000000": (API identifier for variant) {
    *         "name": (string) name of variant,
    *         "revenue": (float),
    *         "conversions": (int),
    *         "entries": (int)
    *       },
    *       ... (more variants)
    *     },
    *     "step_stats": (optional) {
    *       "00000000-0000-0000-0000-0000000000000": (API identifier for step) {
    *         "name": (string) name of step,
    *         "revenue": (float),
    *         "conversions": (int),
    *         "conversions_by_entry_time": (int),
    *         "messages": {
    *           "android_push": (name of channel) [
    *             {
    *               "sent": (int),
    *               "opens": (int),
    *               "influenced_opens": (int),
    *               "bounces": (int)
    *               ... (more stats for channel)
    *             }
    *           ],
    *           ... (more channels)
    *         }
    *       },
    *       ... (more steps)
    *     }
    *   },
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
    *
    * GET /canvas/data_summary
    */
    public Map<?, ?> list(ListRequest request) {
        return list(request, null);
    }


    /**
    * Export Canvas Data Analytics Summary
    *
    * > Use this endpoint to export rollups of time series data for a Canvas, providing a concise summary of a Canvas’ results.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `canvas.data_summary` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "data": {
    *     "name": (string) Canvas name,
    *     "total_stats": {
    *       "revenue": (float),
    *       "conversions": (int),
    *       "conversions_by_entry_time": (int),
    *       "entries": (int)
    *     },
    *     "variant_stats": (optional) {
    *       "00000000-0000-0000-0000-0000000000000": (API identifier for variant) {
    *         "name": (string) name of variant,
    *         "revenue": (float),
    *         "conversions": (int),
    *         "entries": (int)
    *       },
    *       ... (more variants)
    *     },
    *     "step_stats": (optional) {
    *       "00000000-0000-0000-0000-0000000000000": (API identifier for step) {
    *         "name": (string) name of step,
    *         "revenue": (float),
    *         "conversions": (int),
    *         "conversions_by_entry_time": (int),
    *         "messages": {
    *           "android_push": (name of channel) [
    *             {
    *               "sent": (int),
    *               "opens": (int),
    *               "influenced_opens": (int),
    *               "bounces": (int)
    *               ... (more stats for channel)
    *             }
    *           ],
    *           ... (more channels)
    *         }
    *       },
    *       ... (more steps)
    *     }
    *   },
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
    *
    * GET /canvas/data_summary
    */
    public Map<?, ?> list(ListRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/canvas/data_summary")
            .addQueryParam("canvas_id", request.getCanvasId(), "form", true)
            .addQueryParam("ending_at", request.getEndingAt(), "form", true)
            .addQueryParam("include_deleted_step_data", request.getIncludeDeletedStepData(), "form", true)
            .addQueryParam("include_step_breakdown", request.getIncludeStepBreakdown(), "form", true)
            .addQueryParam("include_variant_breakdown", request.getIncludeVariantBreakdown(), "form", true)
            .addQueryParam("length", request.getLength(), "form", true)
            .addQueryParam("starting_at", request.getStartingAt(), "form", true)
            .method("GET")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
