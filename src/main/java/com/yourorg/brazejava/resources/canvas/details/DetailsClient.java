
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.canvas.details;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.canvas.details.params.ListRequest;


public class DetailsClient {
    protected final BaseClient baseClient;

    public DetailsClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * Export Canvas Details
    *
    * > Use this endpoint to export metadata about a Canvas, such as the name, time created, current status, and more.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `canvas.details` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * Note: All Canvas steps have a next_paths field, which is an array of `{name, next_step_id}` data. For full steps and Message steps, the `next_step_ids` field will be present, but will not contain data for other Canvas Flow steps.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "created_at": (string) date created as ISO 8601 date,
    *   "updated_at": (string) date updated as ISO 8601 date,
    *   "name": (string) Canvas name,
    *   "description": (string) Canvas description,
    *   "archived": (boolean) whether this Canvas is archived,
    *   "draft": (boolean) whether this Canvas is a draft,
    *   "schedule_type": (string) type of scheduling action,
    *   "first_entry": (string) date of first entry as ISO 8601 date,
    *   "last_entry": (string) date of last entry as ISO 8601 date,
    *   "channels": (array of strings) step channels used with Canvas,
    *   "variants": [
    *     {
    *       "name": (string) name of variant,
    *       "id": (string) API identifier of the variant,
    *       "first_step_ids": (array of strings) API identifiers for first steps in variant,
    *       "first_step_id": (string) API identifier of first step in variant (deprecated in November 2017, only included if the variant has only one first step)
    *     },
    *     ... (more variations)
    *   ],
    *   "tags": (array of strings) tag names associated with the Canvas,
    *   "steps": [
    *     {
    *       "name": (string) name of step,
    *       "id": (string) API identifier of the step,
    *       "next_step_ids": (array of strings) API identifiers of steps following step,
    *       "channels": (array of strings) channels used in step,
    *       "messages": {
    *           "message_variation_id": (string) {  // <=This is the actual id
    *               "channel": (string) channel type of the message (eg., "email"),
    *               ... channel-specific fields for this message, see Campaign Details Endpoint API Response for example message responses ...
    *           }
    *       }
    *     },
    *     ... (more steps)
    *   ],
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
    *
    * GET /canvas/details
    */
    public Map<?, ?> list() {
        return list(ListRequest.builder().build(), null);
    }


    /**
    * Export Canvas Details
    *
    * > Use this endpoint to export metadata about a Canvas, such as the name, time created, current status, and more.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `canvas.details` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * Note: All Canvas steps have a next_paths field, which is an array of `{name, next_step_id}` data. For full steps and Message steps, the `next_step_ids` field will be present, but will not contain data for other Canvas Flow steps.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "created_at": (string) date created as ISO 8601 date,
    *   "updated_at": (string) date updated as ISO 8601 date,
    *   "name": (string) Canvas name,
    *   "description": (string) Canvas description,
    *   "archived": (boolean) whether this Canvas is archived,
    *   "draft": (boolean) whether this Canvas is a draft,
    *   "schedule_type": (string) type of scheduling action,
    *   "first_entry": (string) date of first entry as ISO 8601 date,
    *   "last_entry": (string) date of last entry as ISO 8601 date,
    *   "channels": (array of strings) step channels used with Canvas,
    *   "variants": [
    *     {
    *       "name": (string) name of variant,
    *       "id": (string) API identifier of the variant,
    *       "first_step_ids": (array of strings) API identifiers for first steps in variant,
    *       "first_step_id": (string) API identifier of first step in variant (deprecated in November 2017, only included if the variant has only one first step)
    *     },
    *     ... (more variations)
    *   ],
    *   "tags": (array of strings) tag names associated with the Canvas,
    *   "steps": [
    *     {
    *       "name": (string) name of step,
    *       "id": (string) API identifier of the step,
    *       "next_step_ids": (array of strings) API identifiers of steps following step,
    *       "channels": (array of strings) channels used in step,
    *       "messages": {
    *           "message_variation_id": (string) {  // <=This is the actual id
    *               "channel": (string) channel type of the message (eg., "email"),
    *               ... channel-specific fields for this message, see Campaign Details Endpoint API Response for example message responses ...
    *           }
    *       }
    *     },
    *     ... (more steps)
    *   ],
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
    *
    * GET /canvas/details
    */
    public Map<?, ?> list(ListRequest request) {
        return list(request, null);
    }


    /**
    * Export Canvas Details
    *
    * > Use this endpoint to export metadata about a Canvas, such as the name, time created, current status, and more.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `canvas.details` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * Note: All Canvas steps have a next_paths field, which is an array of `{name, next_step_id}` data. For full steps and Message steps, the `next_step_ids` field will be present, but will not contain data for other Canvas Flow steps.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "created_at": (string) date created as ISO 8601 date,
    *   "updated_at": (string) date updated as ISO 8601 date,
    *   "name": (string) Canvas name,
    *   "description": (string) Canvas description,
    *   "archived": (boolean) whether this Canvas is archived,
    *   "draft": (boolean) whether this Canvas is a draft,
    *   "schedule_type": (string) type of scheduling action,
    *   "first_entry": (string) date of first entry as ISO 8601 date,
    *   "last_entry": (string) date of last entry as ISO 8601 date,
    *   "channels": (array of strings) step channels used with Canvas,
    *   "variants": [
    *     {
    *       "name": (string) name of variant,
    *       "id": (string) API identifier of the variant,
    *       "first_step_ids": (array of strings) API identifiers for first steps in variant,
    *       "first_step_id": (string) API identifier of first step in variant (deprecated in November 2017, only included if the variant has only one first step)
    *     },
    *     ... (more variations)
    *   ],
    *   "tags": (array of strings) tag names associated with the Canvas,
    *   "steps": [
    *     {
    *       "name": (string) name of step,
    *       "id": (string) API identifier of the step,
    *       "next_step_ids": (array of strings) API identifiers of steps following step,
    *       "channels": (array of strings) channels used in step,
    *       "messages": {
    *           "message_variation_id": (string) {  // <=This is the actual id
    *               "channel": (string) channel type of the message (eg., "email"),
    *               ... channel-specific fields for this message, see Campaign Details Endpoint API Response for example message responses ...
    *           }
    *       }
    *     },
    *     ... (more steps)
    *   ],
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325).
    *
    * GET /canvas/details
    */
    public Map<?, ?> list(ListRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/canvas/details")
            .addQueryParam("canvas_id", request.getCanvasId(), "form", true)
            .method("GET")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
