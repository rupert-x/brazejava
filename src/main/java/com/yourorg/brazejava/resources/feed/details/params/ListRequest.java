
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.feed.details.params;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * ListRequest
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ListRequest.Builder.class)
public final class ListRequest {
    /**
     * (Required) String
     *
     * See [Card API identifier](https://www.braze.com/docs/api/identifier_types/).
     *
     * The `card_id` for a given card can be found in the **Settings > Setup and Testing > API Keys** page and on the card details page within your dashboard, or you can use the [News Feed List Endpoint](https://www.braze.com/docs/api/endpoints/export/news_feed/get_news_feed_cards/).
     */
    private final Optional<String> cardId;

    private ListRequest(
        Optional<String> cardId
    ) {
        this.cardId = cardId;
    }

    /**
     * Retrieves value for `cardId`
     * (Required) String
     *
     * See [Card API identifier](https://www.braze.com/docs/api/identifier_types/).
     *
     * The `card_id` for a given card can be found in the **Settings > Setup and Testing > API Keys** page and on the card details page within your dashboard, or you can use the [News Feed List Endpoint](https://www.braze.com/docs/api/endpoints/export/news_feed/get_news_feed_cards/).
     */
    @JsonProperty("card_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getCardId() {
        return cardId.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof ListRequest && equalTo((ListRequest) other);
    }

    private boolean equalTo(ListRequest other) {
        return
            cardId.equals(other.cardId)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.cardId
               );
    }

    @Override
    public String toString() {
        return "ListRequest{" +
               "cardId=" + cardId +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        /**
         * (Required) String
         *
         * See [Card API identifier](https://www.braze.com/docs/api/identifier_types/).
         *
         * The `card_id` for a given card can be found in the **Settings > Setup and Testing > API Keys** page and on the card details page within your dashboard, or you can use the [News Feed List Endpoint](https://www.braze.com/docs/api/endpoints/export/news_feed/get_news_feed_cards/).
         */
        private Optional<String> cardId = Optional.empty();

        private Builder() {}

        public Builder from(ListRequest other) {
            cardId(other.getCardId());
            return this;
        }

        /**
         * Sets value for `cardId`
         * (Required) String
         *
         * See [Card API identifier](https://www.braze.com/docs/api/identifier_types/).
         *
         * The `card_id` for a given card can be found in the **Settings > Setup and Testing > API Keys** page and on the card details page within your dashboard, or you can use the [News Feed List Endpoint](https://www.braze.com/docs/api/endpoints/export/news_feed/get_news_feed_cards/).
         */
        @JsonSetter("card_id")
        public Builder cardId(String cardId) {
            this.cardId = Optional.ofNullable(cardId);

            return this;
        }

        public Builder cardId(Optional<String> cardId) {
            this.cardId = cardId;
            return this;
        }


        public ListRequest build() {
            return new ListRequest(
                       cardId
                   );
        }
    }

}



