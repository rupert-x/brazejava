
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.users.export.ids.params;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.yourorg.brazejava.model.UsersExportIdsCreateBody;


/**
 * CreateRequest
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateRequest.Builder.class)
public final class CreateRequest {
    private final Optional<UsersExportIdsCreateBody> data;

    private CreateRequest(
        Optional<UsersExportIdsCreateBody> data
    ) {
        this.data = data;
    }

    /**
     * Retrieves value for `data`
     */
    @JsonProperty("data")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public UsersExportIdsCreateBody getData() {
        return data.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof CreateRequest && equalTo((CreateRequest) other);
    }

    private boolean equalTo(CreateRequest other) {
        return
            data.equals(other.data)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.data
               );
    }

    @Override
    public String toString() {
        return "CreateRequest{" +
               "data=" + data +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<UsersExportIdsCreateBody> data = Optional.empty();

        private Builder() {}

        public Builder from(CreateRequest other) {
            data(other.getData());
            return this;
        }

        /**
         * Sets value for `data`
         */
        @JsonSetter("data")
        public Builder data(UsersExportIdsCreateBody data) {
            this.data = Optional.ofNullable(data);

            return this;
        }

        public Builder data(Optional<UsersExportIdsCreateBody> data) {
            this.data = data;
            return this;
        }


        public CreateRequest build() {
            return new CreateRequest(
                       data
                   );
        }
    }

}



