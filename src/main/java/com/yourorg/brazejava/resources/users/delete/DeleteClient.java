
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.users.delete;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.users.delete.params.CreateRequest;


public class DeleteClient {
    protected final BaseClient baseClient;

    public DeleteClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * Delete Users
    *
    * > Use this endpoint to delete any user profile by specifying a known user identifier.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `users.delete` permission.
    *
    * Up to 50 `external_ids`, `user_aliases`, or `braze_ids` can be included in a single request. Only one of `external_ids`, `user_aliases`, or `braze_ids` can be included in a single request.
    *
    * > **Important:** Deleting user profiles cannot be undone. It will permanently remove users which may cause discrepancies in your data. Learn more about what happens when you [delete a user profile via API](https://braze.com/docs/help/help_articles/api/delete_user/) in our Help documentation.
    *
    *
    * ### Rate limit
    *
    * For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/alias/new` and `/users/identify` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ### Request parameter
    *
    * | Parameter | Required | Data Type | Description |
    * | --- | --- | --- | --- |
    * | `external_ids` | Optional | Array of strings | External identifiers for the users to delete. |
    * | `user_aliases` | Optional | Array of user alias object | [User aliases](https://www.braze.com/docs/api/objects_filters/user_alias_object/) for the users to delete. |
    * | `braze_ids` | Optional | Array of strings | Braze user identifiers for the users to delete. |
    *
    * POST /users/delete
    */
    public Map<?, ?> create(CreateRequest request) {
        return create(request, null);
    }


    /**
    * Delete Users
    *
    * > Use this endpoint to delete any user profile by specifying a known user identifier.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `users.delete` permission.
    *
    * Up to 50 `external_ids`, `user_aliases`, or `braze_ids` can be included in a single request. Only one of `external_ids`, `user_aliases`, or `braze_ids` can be included in a single request.
    *
    * > **Important:** Deleting user profiles cannot be undone. It will permanently remove users which may cause discrepancies in your data. Learn more about what happens when you [delete a user profile via API](https://braze.com/docs/help/help_articles/api/delete_user/) in our Help documentation.
    *
    *
    * ### Rate limit
    *
    * For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/alias/new` and `/users/identify` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ### Request parameter
    *
    * | Parameter | Required | Data Type | Description |
    * | --- | --- | --- | --- |
    * | `external_ids` | Optional | Array of strings | External identifiers for the users to delete. |
    * | `user_aliases` | Optional | Array of user alias object | [User aliases](https://www.braze.com/docs/api/objects_filters/user_alias_object/) for the users to delete. |
    * | `braze_ids` | Optional | Array of strings | Braze user identifiers for the users to delete. |
    *
    * POST /users/delete
    */
    public Map<?, ?> create(CreateRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/users/delete")
            .method("POST")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .setJsonBody(request.getData())
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
