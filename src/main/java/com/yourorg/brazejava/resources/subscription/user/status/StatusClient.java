
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.subscription.user.status;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.subscription.user.status.params.ListRequest;


public class StatusClient {
    protected final BaseClient baseClient;

    public StatusClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * List User's Subscription Group - SMS
    *
    * > Use this endpoint to list and get the subscription groups of a certain user.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `subscription.groups.get` permission.
    *
    * If there are multiple users (multiple external IDs) who share the same email address, all users will be returned as a separate user (even if they have the same email address or subscription group).
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * GET /subscription/user/status
    */
    public Map<?, ?> list() {
        return list(ListRequest.builder().build(), null);
    }


    /**
    * List User's Subscription Group - SMS
    *
    * > Use this endpoint to list and get the subscription groups of a certain user.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `subscription.groups.get` permission.
    *
    * If there are multiple users (multiple external IDs) who share the same email address, all users will be returned as a separate user (even if they have the same email address or subscription group).
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * GET /subscription/user/status
    */
    public Map<?, ?> list(ListRequest request) {
        return list(request, null);
    }


    /**
    * List User's Subscription Group - SMS
    *
    * > Use this endpoint to list and get the subscription groups of a certain user.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `subscription.groups.get` permission.
    *
    * If there are multiple users (multiple external IDs) who share the same email address, all users will be returned as a separate user (even if they have the same email address or subscription group).
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * GET /subscription/user/status
    */
    public Map<?, ?> list(ListRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/subscription/user/status")
            .addQueryParam("external_id", request.getExternalId(), "form", true)
            .addQueryParam("limit", request.getLimit(), "form", true)
            .addQueryParam("offset", request.getOffset(), "form", true)
            .addQueryParam("phone", request.getPhone(), "form", true)
            .method("GET")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
