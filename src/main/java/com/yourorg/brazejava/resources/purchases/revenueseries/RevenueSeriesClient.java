
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.purchases.revenueseries;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.purchases.revenueseries.params.ListRequest;


public class RevenueSeriesClient {
    protected final BaseClient baseClient;

    public RevenueSeriesClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * Export Revenue Data by Time
    *
    * > Use this endpoint to return the total money spent in your app over a time range.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `purchases.revenue_series` permission.
    *
    * ## Rate limit
    *
    * For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/events/list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Example request
    *
    * ```
    * curl --location --request GET 'https://rest.iad-01.braze.com/purchases/revenue_series?length=100' \
    * --header 'Authorization: Bearer YOUR-REST-API-KEY'
    *
    * ```
    *
    * ## Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors,
    *   "data" : [
    *     {
    *       "time" : (string) the date as ISO 8601 date,
    *       "revenue" : (int) amount of revenue for the time period
    *       },
    *     ...
    *   ]
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
    *
    * GET /purchases/revenue_series
    */
    public Map<?, ?> list() {
        return list(ListRequest.builder().build(), null);
    }


    /**
    * Export Revenue Data by Time
    *
    * > Use this endpoint to return the total money spent in your app over a time range.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `purchases.revenue_series` permission.
    *
    * ## Rate limit
    *
    * For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/events/list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Example request
    *
    * ```
    * curl --location --request GET 'https://rest.iad-01.braze.com/purchases/revenue_series?length=100' \
    * --header 'Authorization: Bearer YOUR-REST-API-KEY'
    *
    * ```
    *
    * ## Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors,
    *   "data" : [
    *     {
    *       "time" : (string) the date as ISO 8601 date,
    *       "revenue" : (int) amount of revenue for the time period
    *       },
    *     ...
    *   ]
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
    *
    * GET /purchases/revenue_series
    */
    public Map<?, ?> list(ListRequest request) {
        return list(request, null);
    }


    /**
    * Export Revenue Data by Time
    *
    * > Use this endpoint to return the total money spent in your app over a time range.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `purchases.revenue_series` permission.
    *
    * ## Rate limit
    *
    * For customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/events/list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Example request
    *
    * ```
    * curl --location --request GET 'https://rest.iad-01.braze.com/purchases/revenue_series?length=100' \
    * --header 'Authorization: Bearer YOUR-REST-API-KEY'
    *
    * ```
    *
    * ## Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "message": (required, string) the status of the export, returns 'success' when completed without errors,
    *   "data" : [
    *     {
    *       "time" : (string) the date as ISO 8601 date,
    *       "revenue" : (int) amount of revenue for the time period
    *       },
    *     ...
    *   ]
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
    *
    * GET /purchases/revenue_series
    */
    public Map<?, ?> list(ListRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/purchases/revenue_series")
            .addQueryParam("app_id", request.getAppId(), "form", true)
            .addQueryParam("ending_at", request.getEndingAt(), "form", true)
            .addQueryParam("length", request.getLength(), "form", true)
            .addQueryParam("product", request.getProduct(), "form", true)
            .addQueryParam("unit", request.getUnit(), "form", true)
            .method("GET")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
