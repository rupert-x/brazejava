
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.sends.id.create;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.sends.id.create.params.CreateRequest;


public class CreateClient {
    protected final BaseClient baseClient;

    public CreateClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * Create Send IDs For Message Send Tracking
    *
    * > Use this endpoint to create send IDs that can be used to send messages and track message performance programatically, without campaign creation for each send.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `sends.id.create` permission.
    *
    * Using the send identifier to track and send messages is useful if you are planning to programmatically generate and send content.
    *
    * ## Rate limit
    *
    * The daily maximum number of custom send identifiers that can be created via this endpoint is 100 for a given app group. Each `send_id` and `campaign_id` combination that you create will count towards your daily limit. The response headers for any valid request include the current rate limit status, see [API rate limits](https://www.braze.com/docs/api/api_limits/) for details.
    *
    * ### Request parameters
    *
    * | Parameter | Required | Data Type | Description |
    * | --- | --- | --- | --- |
    * | `campaign_id` | Required | String | See [campaign identifier]({{site.baseurl}}/api/identifier_types/). |
    * | `send_id` | Optional | String | See [send identifier]({{site.baseurl}}/api/identifier_types/). |
    *
    * ## Response
    *
    * ### Example success response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "message": "success",
    *   "send_id" : (string) the send identifier
    * }
    *
    * ```
    *
    * POST /sends/id/create
    */
    public Map<?, ?> create(CreateRequest request) {
        return create(request, null);
    }


    /**
    * Create Send IDs For Message Send Tracking
    *
    * > Use this endpoint to create send IDs that can be used to send messages and track message performance programatically, without campaign creation for each send.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `sends.id.create` permission.
    *
    * Using the send identifier to track and send messages is useful if you are planning to programmatically generate and send content.
    *
    * ## Rate limit
    *
    * The daily maximum number of custom send identifiers that can be created via this endpoint is 100 for a given app group. Each `send_id` and `campaign_id` combination that you create will count towards your daily limit. The response headers for any valid request include the current rate limit status, see [API rate limits](https://www.braze.com/docs/api/api_limits/) for details.
    *
    * ### Request parameters
    *
    * | Parameter | Required | Data Type | Description |
    * | --- | --- | --- | --- |
    * | `campaign_id` | Required | String | See [campaign identifier]({{site.baseurl}}/api/identifier_types/). |
    * | `send_id` | Optional | String | See [send identifier]({{site.baseurl}}/api/identifier_types/). |
    *
    * ## Response
    *
    * ### Example success response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "message": "success",
    *   "send_id" : (string) the send identifier
    * }
    *
    * ```
    *
    * POST /sends/id/create
    */
    public Map<?, ?> create(CreateRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/sends/id/create")
            .method("POST")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .setJsonBody(request.getData())
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
