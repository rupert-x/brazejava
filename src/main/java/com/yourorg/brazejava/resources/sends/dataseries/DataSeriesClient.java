
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.sends.dataseries;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.sends.dataseries.params.ListRequest;


public class DataSeriesClient {
    protected final BaseClient baseClient;

    public DataSeriesClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * Export Send Analytics
    *
    * > Use this endpoint to retrieve a daily series of various stats for a tracked `send_id`.
    *
    *
    * Braze stores send analytics for 14 days after the send.
    *
    * Campaign conversions will be attributed towards the most recent send id that a given user has received from the campaign.
    *
    * To use this endpoint, you’ll need to generate an API key with the `sends.data_series` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * ### Send analytics endpoint API response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *             "variation_name": (string) variation name,
    *             "sent": (int) the number of sends,
    *             "delivered": (int) the number of messages successfully delivered,
    *             "undelivered": (int) the number of undelivered,
    *             "delivery_failed": (int) the number of rejected,
    *             "direct_opens": (int) the number of direct opens,
    *             "total_opens": (int) the number of total opens,
    *             "bounces": (int) the number of bounces,
    *             "body_clicks": (int) the number of body clicks,
    *             "revenue": (float) the number of dollars of revenue (USD),
    *             "unique_recipients": (int) the number of unique recipients,
    *             "conversions": (int) the number of conversions,
    *             "conversions_by_send_time": (int) the number of conversions,
    *             "conversions1": (int, optional) the number of conversions for the second conversion event,
    *             "conversions1_by_send_time": (int, optional) the number of conversions for the second conversion event by send time,
    *             "conversions2": (int, optional) the number of conversions for the third conversion event,
    *             "conversions2_by_send_time": (int, optional) the number of conversions for the third conversion event by send time,
    *             "conversions3": (int, optional) the number of conversions for the fourth conversion event,
    *             "conversions3_by_send_time": (int, optional) the number of conversions for the fourth conversion event by send time
    *           }
    *         ]
    *       },
    *       "conversions_by_send_time": 0,
    *       "conversions1_by_send_time": 0,
    *       "conversions2_by_send_time": 0,
    *       "conversions3_by_send_time": 0,
    *       "conversions": 0,
    *       "conversions1": 0,
    *       "conversions2": 0,
    *       "conversions3": 0,
    *       "unique_recipients": 1,
    *       "revenue": 0
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
    *
    * GET /sends/data_series
    */
    public Map<?, ?> list() {
        return list(ListRequest.builder().build(), null);
    }


    /**
    * Export Send Analytics
    *
    * > Use this endpoint to retrieve a daily series of various stats for a tracked `send_id`.
    *
    *
    * Braze stores send analytics for 14 days after the send.
    *
    * Campaign conversions will be attributed towards the most recent send id that a given user has received from the campaign.
    *
    * To use this endpoint, you’ll need to generate an API key with the `sends.data_series` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * ### Send analytics endpoint API response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *             "variation_name": (string) variation name,
    *             "sent": (int) the number of sends,
    *             "delivered": (int) the number of messages successfully delivered,
    *             "undelivered": (int) the number of undelivered,
    *             "delivery_failed": (int) the number of rejected,
    *             "direct_opens": (int) the number of direct opens,
    *             "total_opens": (int) the number of total opens,
    *             "bounces": (int) the number of bounces,
    *             "body_clicks": (int) the number of body clicks,
    *             "revenue": (float) the number of dollars of revenue (USD),
    *             "unique_recipients": (int) the number of unique recipients,
    *             "conversions": (int) the number of conversions,
    *             "conversions_by_send_time": (int) the number of conversions,
    *             "conversions1": (int, optional) the number of conversions for the second conversion event,
    *             "conversions1_by_send_time": (int, optional) the number of conversions for the second conversion event by send time,
    *             "conversions2": (int, optional) the number of conversions for the third conversion event,
    *             "conversions2_by_send_time": (int, optional) the number of conversions for the third conversion event by send time,
    *             "conversions3": (int, optional) the number of conversions for the fourth conversion event,
    *             "conversions3_by_send_time": (int, optional) the number of conversions for the fourth conversion event by send time
    *           }
    *         ]
    *       },
    *       "conversions_by_send_time": 0,
    *       "conversions1_by_send_time": 0,
    *       "conversions2_by_send_time": 0,
    *       "conversions3_by_send_time": 0,
    *       "conversions": 0,
    *       "conversions1": 0,
    *       "conversions2": 0,
    *       "conversions3": 0,
    *       "unique_recipients": 1,
    *       "revenue": 0
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
    *
    * GET /sends/data_series
    */
    public Map<?, ?> list(ListRequest request) {
        return list(request, null);
    }


    /**
    * Export Send Analytics
    *
    * > Use this endpoint to retrieve a daily series of various stats for a tracked `send_id`.
    *
    *
    * Braze stores send analytics for 14 days after the send.
    *
    * Campaign conversions will be attributed towards the most recent send id that a given user has received from the campaign.
    *
    * To use this endpoint, you’ll need to generate an API key with the `sends.data_series` permission.
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * ### Send analytics endpoint API response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *             "variation_name": (string) variation name,
    *             "sent": (int) the number of sends,
    *             "delivered": (int) the number of messages successfully delivered,
    *             "undelivered": (int) the number of undelivered,
    *             "delivery_failed": (int) the number of rejected,
    *             "direct_opens": (int) the number of direct opens,
    *             "total_opens": (int) the number of total opens,
    *             "bounces": (int) the number of bounces,
    *             "body_clicks": (int) the number of body clicks,
    *             "revenue": (float) the number of dollars of revenue (USD),
    *             "unique_recipients": (int) the number of unique recipients,
    *             "conversions": (int) the number of conversions,
    *             "conversions_by_send_time": (int) the number of conversions,
    *             "conversions1": (int, optional) the number of conversions for the second conversion event,
    *             "conversions1_by_send_time": (int, optional) the number of conversions for the second conversion event by send time,
    *             "conversions2": (int, optional) the number of conversions for the third conversion event,
    *             "conversions2_by_send_time": (int, optional) the number of conversions for the third conversion event by send time,
    *             "conversions3": (int, optional) the number of conversions for the fourth conversion event,
    *             "conversions3_by_send_time": (int, optional) the number of conversions for the fourth conversion event by send time
    *           }
    *         ]
    *       },
    *       "conversions_by_send_time": 0,
    *       "conversions1_by_send_time": 0,
    *       "conversions2_by_send_time": 0,
    *       "conversions3_by_send_time": 0,
    *       "conversions": 0,
    *       "conversions1": 0,
    *       "conversions2": 0,
    *       "conversions3": 0,
    *       "unique_recipients": 1,
    *       "revenue": 0
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * > **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/).
    *
    * GET /sends/data_series
    */
    public Map<?, ?> list(ListRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/sends/data_series")
            .addQueryParam("campaign_id", request.getCampaignId(), "form", true)
            .addQueryParam("ending_at", request.getEndingAt(), "form", true)
            .addQueryParam("length", request.getLength(), "form", true)
            .addQueryParam("send_id", request.getSendId(), "form", true)
            .method("GET")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
