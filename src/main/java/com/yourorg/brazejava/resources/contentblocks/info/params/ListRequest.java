
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.contentblocks.info.params;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * ListRequest
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ListRequest.Builder.class)
public final class ListRequest {
    /**
     * (Required) String
     *
     * The content block identifier.
     *
     * You can find this by either listing content block information through an API call or going to **Settings > Setup and Testing > API Keys**, then scrolling to the bottom and searching for your content block API identifier.
     */
    private final Optional<String> contentBlockId;
    /**
     * (Optional) Boolean
     *
     * When set to `true`, the API returns back the Message Variation API identifier of campaigns and Canvases where this content block is included, to be used in subsequent calls. The results exclude archived or deleted Campaigns or Canvases.
     */
    private final Optional<Boolean> includeInclusionData;

    private ListRequest(
        Optional<String> contentBlockId,
        Optional<Boolean> includeInclusionData
    ) {
        this.contentBlockId = contentBlockId;
        this.includeInclusionData = includeInclusionData;
    }

    /**
     * Retrieves value for `contentBlockId`
     * (Required) String
     *
     * The content block identifier.
     *
     * You can find this by either listing content block information through an API call or going to **Settings > Setup and Testing > API Keys**, then scrolling to the bottom and searching for your content block API identifier.
     */
    @JsonProperty("content_block_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getContentBlockId() {
        return contentBlockId.orElse(null);
    }

    /**
     * Retrieves value for `includeInclusionData`
     * (Optional) Boolean
     *
     * When set to `true`, the API returns back the Message Variation API identifier of campaigns and Canvases where this content block is included, to be used in subsequent calls. The results exclude archived or deleted Campaigns or Canvases.
     */
    @JsonProperty("include_inclusion_data")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Boolean getIncludeInclusionData() {
        return includeInclusionData.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof ListRequest && equalTo((ListRequest) other);
    }

    private boolean equalTo(ListRequest other) {
        return
            contentBlockId.equals(other.contentBlockId) &&

            includeInclusionData.equals(other.includeInclusionData)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.contentBlockId,
                   this.includeInclusionData
               );
    }

    @Override
    public String toString() {
        return "ListRequest{" +
               "contentBlockId=" + contentBlockId +
               "includeInclusionData=" + includeInclusionData +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        /**
         * (Required) String
         *
         * The content block identifier.
         *
         * You can find this by either listing content block information through an API call or going to **Settings > Setup and Testing > API Keys**, then scrolling to the bottom and searching for your content block API identifier.
         */
        private Optional<String> contentBlockId = Optional.empty();
        /**
         * (Optional) Boolean
         *
         * When set to `true`, the API returns back the Message Variation API identifier of campaigns and Canvases where this content block is included, to be used in subsequent calls. The results exclude archived or deleted Campaigns or Canvases.
         */
        private Optional<Boolean> includeInclusionData = Optional.empty();

        private Builder() {}

        public Builder from(ListRequest other) {
            contentBlockId(other.getContentBlockId());
            includeInclusionData(other.getIncludeInclusionData());
            return this;
        }

        /**
         * Sets value for `contentBlockId`
         * (Required) String
         *
         * The content block identifier.
         *
         * You can find this by either listing content block information through an API call or going to **Settings > Setup and Testing > API Keys**, then scrolling to the bottom and searching for your content block API identifier.
         */
        @JsonSetter("content_block_id")
        public Builder contentBlockId(String contentBlockId) {
            this.contentBlockId = Optional.ofNullable(contentBlockId);

            return this;
        }

        public Builder contentBlockId(Optional<String> contentBlockId) {
            this.contentBlockId = contentBlockId;
            return this;
        }

        /**
         * Sets value for `includeInclusionData`
         * (Optional) Boolean
         *
         * When set to `true`, the API returns back the Message Variation API identifier of campaigns and Canvases where this content block is included, to be used in subsequent calls. The results exclude archived or deleted Campaigns or Canvases.
         */
        @JsonSetter("include_inclusion_data")
        public Builder includeInclusionData(Boolean includeInclusionData) {
            this.includeInclusionData = Optional.ofNullable(includeInclusionData);

            return this;
        }

        public Builder includeInclusionData(Optional<Boolean> includeInclusionData) {
            this.includeInclusionData = includeInclusionData;
            return this;
        }


        public ListRequest build() {
            return new ListRequest(
                       contentBlockId,
                       includeInclusionData
                   );
        }
    }

}



