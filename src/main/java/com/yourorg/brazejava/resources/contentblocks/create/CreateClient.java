
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.contentblocks.create;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.contentblocks.create.params.CreateRequest;


public class CreateClient {
    protected final BaseClient baseClient;

    public CreateClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * Create Content Block
    *
    * > Use this endpoint to create a [Content Block](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/).
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `content_blocks.create` permission.
    *
    * ### Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ### Request parameters
    *
    * | Parameter | Required | Data Type | Description |
    * | --- | --- | --- | --- |
    * | `name` | Required | String | Name of the content block. Must be less than 100 characters. |
    * | `description` | Optional | String | Description of the content block. Must be less than 250 characters. |
    * | `content` | Required | String | HTML or text content within the Content Block. |
    * | `state` | Optional | String | Choose `active` or `draft`. Defaults to `active` if not specified. |
    * | `tags` | Optional | Array of strings | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |
    *
    * ### Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "content_block_id": (string) Your newly generated block id,
    *   "liquid_tag": (string) The generated block tag from the Content Block name,
    *   "created_at": (string) The time the Content Block was created in ISO 8601,
    *   "message": "success"
    * }
    *
    * ```
    *
    * ## Troubleshooting
    *
    * The following table lists possible returned errors and their associated troubleshooting steps.
    *
    * | Error | Troubleshooting |
    * | --- | --- |
    * | `Content cannot be blank` |  |
    * | `Content must be a string` | Make sure your content is encapsulated in quotes (`""`). |
    * | `Content must be smaller than 50kb` | The content in your Content Block must be less than 50kb total. |
    * | `Content contains malformed liquid` | The Liquid provided is not valid or parsable. Try again with valid Liquid or reach out to support. |
    * | `Content Block cannot be referenced within itself` |  |
    * | `Content Block description cannot be blank` |  |
    * | `Content Block description must be a string` | Make sure your Content Block description is encapsulated in quotes (`""`). |
    * | `Content Block description must be shorter than 250 characters` |  |
    * | `Content Block name cannot be blank` |  |
    * | `Content Block name must be shorter than 100 characters` |  |
    * | `Content Block name can only contain alphanumeric characters` | Content Block names can include any of the following characters: the letters (capitalized or lowercase) `A` through `Z`, the numbers `0` through `9`, dashes `-`, and underscores `_`. It cannot contain non-alphanumeric characters like emojis, `!`, `@`, `~`, `&`, and other "special" characters. |
    * | `Content Block with this name already exists` | Try a different name. |
    * | `Content Block state must be either active or draft` |  |
    * | `Tags must be an array` | Tags must be formatted as an array of strings, for example `["marketing", "promotional", "transactional"]`. |
    * | `All tags must be strings` | Make sure your tags are encapsulated in quotes (`""`). |
    * | `Some tags could not be found` | To add a tag when creating a Content Block, the tag must already exist in Braze. |
    *
    * POST /content_blocks/create
    */
    public Map<?, ?> create(CreateRequest request) {
        return create(request, null);
    }


    /**
    * Create Content Block
    *
    * > Use this endpoint to create a [Content Block](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/).
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `content_blocks.create` permission.
    *
    * ### Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ### Request parameters
    *
    * | Parameter | Required | Data Type | Description |
    * | --- | --- | --- | --- |
    * | `name` | Required | String | Name of the content block. Must be less than 100 characters. |
    * | `description` | Optional | String | Description of the content block. Must be less than 250 characters. |
    * | `content` | Required | String | HTML or text content within the Content Block. |
    * | `state` | Optional | String | Choose `active` or `draft`. Defaults to `active` if not specified. |
    * | `tags` | Optional | Array of strings | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |
    *
    * ### Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "content_block_id": (string) Your newly generated block id,
    *   "liquid_tag": (string) The generated block tag from the Content Block name,
    *   "created_at": (string) The time the Content Block was created in ISO 8601,
    *   "message": "success"
    * }
    *
    * ```
    *
    * ## Troubleshooting
    *
    * The following table lists possible returned errors and their associated troubleshooting steps.
    *
    * | Error | Troubleshooting |
    * | --- | --- |
    * | `Content cannot be blank` |  |
    * | `Content must be a string` | Make sure your content is encapsulated in quotes (`""`). |
    * | `Content must be smaller than 50kb` | The content in your Content Block must be less than 50kb total. |
    * | `Content contains malformed liquid` | The Liquid provided is not valid or parsable. Try again with valid Liquid or reach out to support. |
    * | `Content Block cannot be referenced within itself` |  |
    * | `Content Block description cannot be blank` |  |
    * | `Content Block description must be a string` | Make sure your Content Block description is encapsulated in quotes (`""`). |
    * | `Content Block description must be shorter than 250 characters` |  |
    * | `Content Block name cannot be blank` |  |
    * | `Content Block name must be shorter than 100 characters` |  |
    * | `Content Block name can only contain alphanumeric characters` | Content Block names can include any of the following characters: the letters (capitalized or lowercase) `A` through `Z`, the numbers `0` through `9`, dashes `-`, and underscores `_`. It cannot contain non-alphanumeric characters like emojis, `!`, `@`, `~`, `&`, and other "special" characters. |
    * | `Content Block with this name already exists` | Try a different name. |
    * | `Content Block state must be either active or draft` |  |
    * | `Tags must be an array` | Tags must be formatted as an array of strings, for example `["marketing", "promotional", "transactional"]`. |
    * | `All tags must be strings` | Make sure your tags are encapsulated in quotes (`""`). |
    * | `Some tags could not be found` | To add a tag when creating a Content Block, the tag must already exist in Braze. |
    *
    * POST /content_blocks/create
    */
    public Map<?, ?> create(CreateRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/content_blocks/create")
            .method("POST")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .setJsonBody(request.getData())
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
