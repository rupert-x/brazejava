
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.templates.email.info;

import java.io.IOException;
import java.util.Map;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.resources.templates.email.info.params.ListRequest;


public class InfoClient {
    protected final BaseClient baseClient;

    public InfoClient(BaseClient baseClient) {
        this.baseClient = baseClient;

    }

    /**
    * See Email Template Information
    *
    * > Use this endpoint to get information on your email templates.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `templates.email.info` permission.
    *
    * > **Important:** Templates built using the drag-and-drop editor for email are not accepted.
    *
    *
    * ### Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ### Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "email_template_id": (string) your email template's API Identifier,
    *   "template_name": (string) the name of your email template,
    *   "description": (string) email template description,
    *   "subject": (string) the email template subject line,
    *   "preheader": (optional, string) the email preheader used to generate previews in some clients),
    *   "body": (optional, string) the email template body that may include HTML,
    *   "plaintext_body": (optional, string) a plaintext version of the email template body,
    *   "should_inline_css": (optional, boolean) whether there is inline CSS in the body of the template - defaults to the css inlining value for the App Group,
    *   "tags": (string) tag names,
    *   "created_at": (string, in ISO 8601),
    *   "updated_at": (string, in ISO 8601)
    * }
    *
    * ```
    *
    * Images in this response will show in the `body` variable as HTML.
    *
    * GET /templates/email/info
    */
    public Map<?, ?> list() {
        return list(ListRequest.builder().build(), null);
    }


    /**
    * See Email Template Information
    *
    * > Use this endpoint to get information on your email templates.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `templates.email.info` permission.
    *
    * > **Important:** Templates built using the drag-and-drop editor for email are not accepted.
    *
    *
    * ### Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ### Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "email_template_id": (string) your email template's API Identifier,
    *   "template_name": (string) the name of your email template,
    *   "description": (string) email template description,
    *   "subject": (string) the email template subject line,
    *   "preheader": (optional, string) the email preheader used to generate previews in some clients),
    *   "body": (optional, string) the email template body that may include HTML,
    *   "plaintext_body": (optional, string) a plaintext version of the email template body,
    *   "should_inline_css": (optional, boolean) whether there is inline CSS in the body of the template - defaults to the css inlining value for the App Group,
    *   "tags": (string) tag names,
    *   "created_at": (string, in ISO 8601),
    *   "updated_at": (string, in ISO 8601)
    * }
    *
    * ```
    *
    * Images in this response will show in the `body` variable as HTML.
    *
    * GET /templates/email/info
    */
    public Map<?, ?> list(ListRequest request) {
        return list(request, null);
    }


    /**
    * See Email Template Information
    *
    * > Use this endpoint to get information on your email templates.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `templates.email.info` permission.
    *
    * > **Important:** Templates built using the drag-and-drop editor for email are not accepted.
    *
    *
    * ### Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ### Response
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "email_template_id": (string) your email template's API Identifier,
    *   "template_name": (string) the name of your email template,
    *   "description": (string) email template description,
    *   "subject": (string) the email template subject line,
    *   "preheader": (optional, string) the email preheader used to generate previews in some clients),
    *   "body": (optional, string) the email template body that may include HTML,
    *   "plaintext_body": (optional, string) a plaintext version of the email template body,
    *   "should_inline_css": (optional, boolean) whether there is inline CSS in the body of the template - defaults to the css inlining value for the App Group,
    *   "tags": (string) tag names,
    *   "created_at": (string, in ISO 8601),
    *   "updated_at": (string, in ISO 8601)
    * }
    *
    * ```
    *
    * Images in this response will show in the `body` variable as HTML.
    *
    * GET /templates/email/info
    */
    public Map<?, ?> list(ListRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/templates/email/info")
            .addQueryParam("email_template_id", request.getEmailTemplateId(), "form", true)
            .method("GET")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }


}
