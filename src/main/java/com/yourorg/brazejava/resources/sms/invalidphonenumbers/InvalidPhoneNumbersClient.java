
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.sms.invalidphonenumbers;

import java.io.IOException;
import java.util.Map;
import java.util.function.Supplier;

import com.fasterxml.jackson.core.type.TypeReference;
import com.yourorg.brazejava.core.ApiException;
import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.HttpRequestBuilder;
import com.yourorg.brazejava.core.RequestOptions;
import com.yourorg.brazejava.core.ResponseHandler;
import com.yourorg.brazejava.core.Suppliers;
import com.yourorg.brazejava.resources.sms.invalidphonenumbers.params.ListRequest;
import com.yourorg.brazejava.resources.sms.invalidphonenumbers.remove.RemoveClient;


public class InvalidPhoneNumbersClient {
    protected final BaseClient baseClient;
    protected final Supplier<RemoveClient> remove;
    public InvalidPhoneNumbersClient(BaseClient baseClient) {
        this.baseClient = baseClient;
        this.remove = Suppliers.memoize(() -> new RemoveClient(baseClient));
    }

    public RemoveClient remove() {
        return this.remove.get();
    }

    /**
    * Query Invalid Phone Numbers
    *
    * > Use this endpoint to pull a list of phone numbers that have been deemed “invalid” within a certain time frame.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `sms.invalid_phone_numbers` permission.
    *
    * - If you provide a `start_date`, an `end_date`, and `phone_numbers`, we prioritize the given phone numbers and disregard the date range.
    * - If your date range has more than the `limit` number of invalid phone numbers, you will need to make multiple API calls with increasing the `offset` each time until a call returns either fewer than `limit` or zero results.
    *
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * Entries are listed in descending order.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "sms": [
    *     {
    *       "phone": "12345678900",
    *       "invalid_detected_at": "2016-08-25 15:24:32 +0000"
    *     },
    *     {
    *       "phone": "12345678901",
    *       "invalid_detected_at": "2016-08-24 17:41:58 +0000"
    *     },
    *     {
    *       "phone": "12345678902",
    *       "invalid_detected_at": "2016-08-24 12:01:13 +0000"
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * GET /sms/invalid_phone_numbers
    */
    public Map<?, ?> list() {
        return list(ListRequest.builder().build(), null);
    }


    /**
    * Query Invalid Phone Numbers
    *
    * > Use this endpoint to pull a list of phone numbers that have been deemed “invalid” within a certain time frame.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `sms.invalid_phone_numbers` permission.
    *
    * - If you provide a `start_date`, an `end_date`, and `phone_numbers`, we prioritize the given phone numbers and disregard the date range.
    * - If your date range has more than the `limit` number of invalid phone numbers, you will need to make multiple API calls with increasing the `offset` each time until a call returns either fewer than `limit` or zero results.
    *
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * Entries are listed in descending order.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "sms": [
    *     {
    *       "phone": "12345678900",
    *       "invalid_detected_at": "2016-08-25 15:24:32 +0000"
    *     },
    *     {
    *       "phone": "12345678901",
    *       "invalid_detected_at": "2016-08-24 17:41:58 +0000"
    *     },
    *     {
    *       "phone": "12345678902",
    *       "invalid_detected_at": "2016-08-24 12:01:13 +0000"
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * GET /sms/invalid_phone_numbers
    */
    public Map<?, ?> list(ListRequest request) {
        return list(request, null);
    }


    /**
    * Query Invalid Phone Numbers
    *
    * > Use this endpoint to pull a list of phone numbers that have been deemed “invalid” within a certain time frame.
    *
    *
    * To use this endpoint, you’ll need to generate an API key with the `sms.invalid_phone_numbers` permission.
    *
    * - If you provide a `start_date`, an `end_date`, and `phone_numbers`, we prioritize the given phone numbers and disregard the date range.
    * - If your date range has more than the `limit` number of invalid phone numbers, you will need to make multiple API calls with increasing the `offset` each time until a call returns either fewer than `limit` or zero results.
    *
    *
    * ## Rate limit
    *
    * We apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).
    *
    * ## Response
    *
    * Entries are listed in descending order.
    *
    * ``` json
    * Content-Type: application/json
    * Authorization: Bearer YOUR-REST-API-KEY
    * {
    *   "sms": [
    *     {
    *       "phone": "12345678900",
    *       "invalid_detected_at": "2016-08-25 15:24:32 +0000"
    *     },
    *     {
    *       "phone": "12345678901",
    *       "invalid_detected_at": "2016-08-24 17:41:58 +0000"
    *     },
    *     {
    *       "phone": "12345678902",
    *       "invalid_detected_at": "2016-08-24 12:01:13 +0000"
    *     }
    *   ],
    *   "message": "success"
    * }
    *
    * ```
    *
    * GET /sms/invalid_phone_numbers
    */
    public Map<?, ?> list(ListRequest request, RequestOptions requestOptions) {

        try {
            okhttp3.Response response = new HttpRequestBuilder()
            .baseUrl(this.baseClient.baseUrl())
            .path("/sms/invalid_phone_numbers")
            .addQueryParam("end_date", request.getEndDate(), "form", true)
            .addQueryParam("limit", request.getLimit(), "form", true)
            .addQueryParam("offset", request.getOffset(), "form", true)
            .addQueryParam("phone_numbers", request.getPhoneNumbers(), "form", true)
            .addQueryParam("start_date", request.getStartDate(), "form", true)
            .method("GET")
            .addAuth(baseClient.getAuth("BearerAuth"))
            .execute();
            return ResponseHandler.processJsonResponse(response, new TypeReference<Map<?, ?>>() {});
        } catch (IOException e) {
            throw new ApiException("Error executing HTTP request", e);
        }
    }

}
