
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.resources.sms.invalidphonenumbers.params;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * ListRequest
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ListRequest.Builder.class)
public final class ListRequest {
    /**
     * (Optional*) String in YYYY-MM-DD format
     * End date of the range to retrieve invalid phone numbers. This is treated as midnight in UTC time by the API.
     *
     */
    private final Optional<String> endDate;
    /**
     * (Optional) Integer
     * Optional field to limit the number of results returned. Defaults to 100, maximum is 500.
     */
    private final Optional<Integer> limit;
    /**
     * (Optional) Integer
     * Optional beginning point in the list to retrieve from.
     */
    private final Optional<Integer> offset;
    /**
     * (Optional*) Array of Strings in e.164 format
     * If provided, we will return the phone number if it has been found to be invalid.
     *
     */
    private final Optional<Integer> phoneNumbers;
    /**
     * (Optional*) String in YYYY-MM-DD format
     * Start date of the range to retrieve invalid phone numbers, must be earlier than `end_date`. This is treated as midnight in UTC time by the API.
     *
     */
    private final Optional<String> startDate;

    private ListRequest(
        Optional<String> endDate,
        Optional<Integer> limit,
        Optional<Integer> offset,
        Optional<Integer> phoneNumbers,
        Optional<String> startDate
    ) {
        this.endDate = endDate;
        this.limit = limit;
        this.offset = offset;
        this.phoneNumbers = phoneNumbers;
        this.startDate = startDate;
    }

    /**
     * Retrieves value for `endDate`
     * (Optional*) String in YYYY-MM-DD format
     * End date of the range to retrieve invalid phone numbers. This is treated as midnight in UTC time by the API.
     *
     */
    @JsonProperty("end_date")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getEndDate() {
        return endDate.orElse(null);
    }

    /**
     * Retrieves value for `limit`
     * (Optional) Integer
     * Optional field to limit the number of results returned. Defaults to 100, maximum is 500.
     */
    @JsonProperty("limit")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Integer getLimit() {
        return limit.orElse(null);
    }

    /**
     * Retrieves value for `offset`
     * (Optional) Integer
     * Optional beginning point in the list to retrieve from.
     */
    @JsonProperty("offset")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Integer getOffset() {
        return offset.orElse(null);
    }

    /**
     * Retrieves value for `phoneNumbers`
     * (Optional*) Array of Strings in e.164 format
     * If provided, we will return the phone number if it has been found to be invalid.
     *
     */
    @JsonProperty("phone_numbers")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Integer getPhoneNumbers() {
        return phoneNumbers.orElse(null);
    }

    /**
     * Retrieves value for `startDate`
     * (Optional*) String in YYYY-MM-DD format
     * Start date of the range to retrieve invalid phone numbers, must be earlier than `end_date`. This is treated as midnight in UTC time by the API.
     *
     */
    @JsonProperty("start_date")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getStartDate() {
        return startDate.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof ListRequest && equalTo((ListRequest) other);
    }

    private boolean equalTo(ListRequest other) {
        return
            endDate.equals(other.endDate) &&

            limit.equals(other.limit) &&

            offset.equals(other.offset) &&

            phoneNumbers.equals(other.phoneNumbers) &&

            startDate.equals(other.startDate)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.endDate,
                   this.limit,
                   this.offset,
                   this.phoneNumbers,
                   this.startDate
               );
    }

    @Override
    public String toString() {
        return "ListRequest{" +
               "endDate=" + endDate +
               "limit=" + limit +
               "offset=" + offset +
               "phoneNumbers=" + phoneNumbers +
               "startDate=" + startDate +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        /**
         * (Optional*) String in YYYY-MM-DD format
         * End date of the range to retrieve invalid phone numbers. This is treated as midnight in UTC time by the API.
         *
         */
        private Optional<String> endDate = Optional.empty();
        /**
         * (Optional) Integer
         * Optional field to limit the number of results returned. Defaults to 100, maximum is 500.
         */
        private Optional<Integer> limit = Optional.empty();
        /**
         * (Optional) Integer
         * Optional beginning point in the list to retrieve from.
         */
        private Optional<Integer> offset = Optional.empty();
        /**
         * (Optional*) Array of Strings in e.164 format
         * If provided, we will return the phone number if it has been found to be invalid.
         *
         */
        private Optional<Integer> phoneNumbers = Optional.empty();
        /**
         * (Optional*) String in YYYY-MM-DD format
         * Start date of the range to retrieve invalid phone numbers, must be earlier than `end_date`. This is treated as midnight in UTC time by the API.
         *
         */
        private Optional<String> startDate = Optional.empty();

        private Builder() {}

        public Builder from(ListRequest other) {
            endDate(other.getEndDate());
            limit(other.getLimit());
            offset(other.getOffset());
            phoneNumbers(other.getPhoneNumbers());
            startDate(other.getStartDate());
            return this;
        }

        /**
         * Sets value for `endDate`
         * (Optional*) String in YYYY-MM-DD format
         * End date of the range to retrieve invalid phone numbers. This is treated as midnight in UTC time by the API.
         *
         */
        @JsonSetter("end_date")
        public Builder endDate(String endDate) {
            this.endDate = Optional.ofNullable(endDate);

            return this;
        }

        public Builder endDate(Optional<String> endDate) {
            this.endDate = endDate;
            return this;
        }

        /**
         * Sets value for `limit`
         * (Optional) Integer
         * Optional field to limit the number of results returned. Defaults to 100, maximum is 500.
         */
        @JsonSetter("limit")
        public Builder limit(Integer limit) {
            this.limit = Optional.ofNullable(limit);

            return this;
        }

        public Builder limit(Optional<Integer> limit) {
            this.limit = limit;
            return this;
        }

        /**
         * Sets value for `offset`
         * (Optional) Integer
         * Optional beginning point in the list to retrieve from.
         */
        @JsonSetter("offset")
        public Builder offset(Integer offset) {
            this.offset = Optional.ofNullable(offset);

            return this;
        }

        public Builder offset(Optional<Integer> offset) {
            this.offset = offset;
            return this;
        }

        /**
         * Sets value for `phoneNumbers`
         * (Optional*) Array of Strings in e.164 format
         * If provided, we will return the phone number if it has been found to be invalid.
         *
         */
        @JsonSetter("phone_numbers")
        public Builder phoneNumbers(Integer phoneNumbers) {
            this.phoneNumbers = Optional.ofNullable(phoneNumbers);

            return this;
        }

        public Builder phoneNumbers(Optional<Integer> phoneNumbers) {
            this.phoneNumbers = phoneNumbers;
            return this;
        }

        /**
         * Sets value for `startDate`
         * (Optional*) String in YYYY-MM-DD format
         * Start date of the range to retrieve invalid phone numbers, must be earlier than `end_date`. This is treated as midnight in UTC time by the API.
         *
         */
        @JsonSetter("start_date")
        public Builder startDate(String startDate) {
            this.startDate = Optional.ofNullable(startDate);

            return this;
        }

        public Builder startDate(Optional<String> startDate) {
            this.startDate = startDate;
            return this;
        }


        public ListRequest build() {
            return new ListRequest(
                       endDate,
                       limit,
                       offset,
                       phoneNumbers,
                       startDate
                   );
        }
    }

}



