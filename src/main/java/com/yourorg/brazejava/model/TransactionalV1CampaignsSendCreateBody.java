
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * TransactionalV1CampaignsSendCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TransactionalV1CampaignsSendCreateBody.Builder.class)
public final class TransactionalV1CampaignsSendCreateBody {
    private final Optional<String> externalSendId;
    private final Optional<List<TransactionalV1CampaignsSendCreateBodyRecipientItem>> recipient;
    private final Optional<TransactionalV1CampaignsSendCreateBodyTriggerProperties> triggerProperties;

    private TransactionalV1CampaignsSendCreateBody(
        Optional<String> externalSendId,
        Optional<List<TransactionalV1CampaignsSendCreateBodyRecipientItem>> recipient,
        Optional<TransactionalV1CampaignsSendCreateBodyTriggerProperties> triggerProperties
    ) {
        this.externalSendId = externalSendId;
        this.recipient = recipient;
        this.triggerProperties = triggerProperties;
    }

    /**
     * Retrieves value for `externalSendId`
     */
    @JsonProperty("external_send_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getExternalSendId() {
        return externalSendId.orElse(null);
    }

    /**
     * Retrieves value for `recipient`
     */
    @JsonProperty("recipient")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<TransactionalV1CampaignsSendCreateBodyRecipientItem> getRecipient() {
        return recipient.orElse(null);
    }

    /**
     * Retrieves value for `triggerProperties`
     */
    @JsonProperty("trigger_properties")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public TransactionalV1CampaignsSendCreateBodyTriggerProperties getTriggerProperties() {
        return triggerProperties.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof TransactionalV1CampaignsSendCreateBody &&
               equalTo((TransactionalV1CampaignsSendCreateBody) other);
    }

    private boolean equalTo(TransactionalV1CampaignsSendCreateBody other) {
        return
            externalSendId.equals(other.externalSendId) &&

            recipient.equals(other.recipient) &&

            triggerProperties.equals(other.triggerProperties)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.externalSendId,
                   this.recipient,
                   this.triggerProperties
               );
    }

    @Override
    public String toString() {
        return "TransactionalV1CampaignsSendCreateBody{" +
               "externalSendId=" + externalSendId +
               "recipient=" + recipient +
               "triggerProperties=" + triggerProperties +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> externalSendId = Optional.empty();
        private Optional<List<TransactionalV1CampaignsSendCreateBodyRecipientItem>> recipient =
            Optional.empty();
        private Optional<TransactionalV1CampaignsSendCreateBodyTriggerProperties> triggerProperties =
            Optional.empty();

        private Builder() {}

        public Builder from(TransactionalV1CampaignsSendCreateBody other) {
            externalSendId(other.getExternalSendId());
            recipient(other.getRecipient());
            triggerProperties(other.getTriggerProperties());
            return this;
        }

        /**
         * Sets value for `externalSendId`
         */
        @JsonSetter("external_send_id")
        public Builder externalSendId(String externalSendId) {
            this.externalSendId = Optional.ofNullable(externalSendId);

            return this;
        }

        public Builder externalSendId(Optional<String> externalSendId) {
            this.externalSendId = externalSendId;
            return this;
        }

        /**
         * Sets value for `recipient`
         */
        @JsonSetter("recipient")
        public Builder recipient(List<TransactionalV1CampaignsSendCreateBodyRecipientItem> recipient) {
            this.recipient = Optional.ofNullable(recipient);

            return this;
        }

        public Builder recipient(Optional<List<TransactionalV1CampaignsSendCreateBodyRecipientItem>>
                                 recipient) {
            this.recipient = recipient;
            return this;
        }

        /**
         * Sets value for `triggerProperties`
         */
        @JsonSetter("trigger_properties")
        public Builder triggerProperties(TransactionalV1CampaignsSendCreateBodyTriggerProperties
                                         triggerProperties) {
            this.triggerProperties = Optional.ofNullable(triggerProperties);

            return this;
        }

        public Builder triggerProperties(Optional<TransactionalV1CampaignsSendCreateBodyTriggerProperties>
                                         triggerProperties) {
            this.triggerProperties = triggerProperties;
            return this;
        }


        public TransactionalV1CampaignsSendCreateBody build() {
            return new TransactionalV1CampaignsSendCreateBody(
                       externalSendId,
                       recipient,
                       triggerProperties
                   );
        }
    }

}



