
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * CanvasTriggerScheduleUpdateCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CanvasTriggerScheduleUpdateCreateBody.Builder.class)
public final class CanvasTriggerScheduleUpdateCreateBody {
    private final Optional<String> canvasId;
    private final Optional<CanvasTriggerScheduleUpdateCreateBodySchedule> schedule;
    private final Optional<String> scheduleId;

    private CanvasTriggerScheduleUpdateCreateBody(
        Optional<String> canvasId,
        Optional<CanvasTriggerScheduleUpdateCreateBodySchedule> schedule,
        Optional<String> scheduleId
    ) {
        this.canvasId = canvasId;
        this.schedule = schedule;
        this.scheduleId = scheduleId;
    }

    /**
     * Retrieves value for `canvasId`
     */
    @JsonProperty("canvas_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getCanvasId() {
        return canvasId.orElse(null);
    }

    /**
     * Retrieves value for `schedule`
     */
    @JsonProperty("schedule")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public CanvasTriggerScheduleUpdateCreateBodySchedule getSchedule() {
        return schedule.orElse(null);
    }

    /**
     * Retrieves value for `scheduleId`
     */
    @JsonProperty("schedule_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getScheduleId() {
        return scheduleId.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof CanvasTriggerScheduleUpdateCreateBody &&
               equalTo((CanvasTriggerScheduleUpdateCreateBody) other);
    }

    private boolean equalTo(CanvasTriggerScheduleUpdateCreateBody other) {
        return
            canvasId.equals(other.canvasId) &&

            schedule.equals(other.schedule) &&

            scheduleId.equals(other.scheduleId)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.canvasId,
                   this.schedule,
                   this.scheduleId
               );
    }

    @Override
    public String toString() {
        return "CanvasTriggerScheduleUpdateCreateBody{" +
               "canvasId=" + canvasId +
               "schedule=" + schedule +
               "scheduleId=" + scheduleId +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> canvasId = Optional.empty();
        private Optional<CanvasTriggerScheduleUpdateCreateBodySchedule> schedule = Optional.empty();
        private Optional<String> scheduleId = Optional.empty();

        private Builder() {}

        public Builder from(CanvasTriggerScheduleUpdateCreateBody other) {
            canvasId(other.getCanvasId());
            schedule(other.getSchedule());
            scheduleId(other.getScheduleId());
            return this;
        }

        /**
         * Sets value for `canvasId`
         */
        @JsonSetter("canvas_id")
        public Builder canvasId(String canvasId) {
            this.canvasId = Optional.ofNullable(canvasId);

            return this;
        }

        public Builder canvasId(Optional<String> canvasId) {
            this.canvasId = canvasId;
            return this;
        }

        /**
         * Sets value for `schedule`
         */
        @JsonSetter("schedule")
        public Builder schedule(CanvasTriggerScheduleUpdateCreateBodySchedule schedule) {
            this.schedule = Optional.ofNullable(schedule);

            return this;
        }

        public Builder schedule(Optional<CanvasTriggerScheduleUpdateCreateBodySchedule> schedule) {
            this.schedule = schedule;
            return this;
        }

        /**
         * Sets value for `scheduleId`
         */
        @JsonSetter("schedule_id")
        public Builder scheduleId(String scheduleId) {
            this.scheduleId = Optional.ofNullable(scheduleId);

            return this;
        }

        public Builder scheduleId(Optional<String> scheduleId) {
            this.scheduleId = scheduleId;
            return this;
        }


        public CanvasTriggerScheduleUpdateCreateBody build() {
            return new CanvasTriggerScheduleUpdateCreateBody(
                       canvasId,
                       schedule,
                       scheduleId
                   );
        }
    }

}



