
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Map;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * MessagesScheduleCreateCreateBodyMessages
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MessagesScheduleCreateCreateBodyMessages.Builder.class)
public final class MessagesScheduleCreateCreateBodyMessages {
    private final Optional<Map<?, ?>> androidPush;
    private final Optional<Map<?, ?>> applePush;
    private final Optional<Map<?, ?>> contentCard;
    private final Optional<Map<?, ?>> email;
    private final Optional<Map<?, ?>> kindlePush;
    private final Optional<Map<?, ?>> webPush;
    private final Optional<Map<?, ?>> webhook;
    private final Optional<Map<?, ?>> windows8Push;
    private final Optional<Map<?, ?>> windowsPush;

    private MessagesScheduleCreateCreateBodyMessages(
        Optional<Map<?, ?>> androidPush,
        Optional<Map<?, ?>> applePush,
        Optional<Map<?, ?>> contentCard,
        Optional<Map<?, ?>> email,
        Optional<Map<?, ?>> kindlePush,
        Optional<Map<?, ?>> webPush,
        Optional<Map<?, ?>> webhook,
        Optional<Map<?, ?>> windows8Push,
        Optional<Map<?, ?>> windowsPush
    ) {
        this.androidPush = androidPush;
        this.applePush = applePush;
        this.contentCard = contentCard;
        this.email = email;
        this.kindlePush = kindlePush;
        this.webPush = webPush;
        this.webhook = webhook;
        this.windows8Push = windows8Push;
        this.windowsPush = windowsPush;
    }

    /**
     * Retrieves value for `androidPush`
     */
    @JsonProperty("android_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getAndroidPush() {
        return androidPush.orElse(null);
    }

    /**
     * Retrieves value for `applePush`
     */
    @JsonProperty("apple_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getApplePush() {
        return applePush.orElse(null);
    }

    /**
     * Retrieves value for `contentCard`
     */
    @JsonProperty("content_card")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getContentCard() {
        return contentCard.orElse(null);
    }

    /**
     * Retrieves value for `email`
     */
    @JsonProperty("email")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getEmail() {
        return email.orElse(null);
    }

    /**
     * Retrieves value for `kindlePush`
     */
    @JsonProperty("kindle_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getKindlePush() {
        return kindlePush.orElse(null);
    }

    /**
     * Retrieves value for `webPush`
     */
    @JsonProperty("web_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getWebPush() {
        return webPush.orElse(null);
    }

    /**
     * Retrieves value for `webhook`
     */
    @JsonProperty("webhook")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getWebhook() {
        return webhook.orElse(null);
    }

    /**
     * Retrieves value for `windows8Push`
     */
    @JsonProperty("windows8_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getWindows8Push() {
        return windows8Push.orElse(null);
    }

    /**
     * Retrieves value for `windowsPush`
     */
    @JsonProperty("windows_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Map<?, ?> getWindowsPush() {
        return windowsPush.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof MessagesScheduleCreateCreateBodyMessages &&
               equalTo((MessagesScheduleCreateCreateBodyMessages) other);
    }

    private boolean equalTo(MessagesScheduleCreateCreateBodyMessages other) {
        return
            androidPush.equals(other.androidPush) &&

            applePush.equals(other.applePush) &&

            contentCard.equals(other.contentCard) &&

            email.equals(other.email) &&

            kindlePush.equals(other.kindlePush) &&

            webPush.equals(other.webPush) &&

            webhook.equals(other.webhook) &&

            windows8Push.equals(other.windows8Push) &&

            windowsPush.equals(other.windowsPush)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.androidPush,
                   this.applePush,
                   this.contentCard,
                   this.email,
                   this.kindlePush,
                   this.webPush,
                   this.webhook,
                   this.windows8Push,
                   this.windowsPush
               );
    }

    @Override
    public String toString() {
        return "MessagesScheduleCreateCreateBodyMessages{" +
               "androidPush=" + androidPush +
               "applePush=" + applePush +
               "contentCard=" + contentCard +
               "email=" + email +
               "kindlePush=" + kindlePush +
               "webPush=" + webPush +
               "webhook=" + webhook +
               "windows8Push=" + windows8Push +
               "windowsPush=" + windowsPush +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Map<?, ?>> androidPush = Optional.empty();
        private Optional<Map<?, ?>> applePush = Optional.empty();
        private Optional<Map<?, ?>> contentCard = Optional.empty();
        private Optional<Map<?, ?>> email = Optional.empty();
        private Optional<Map<?, ?>> kindlePush = Optional.empty();
        private Optional<Map<?, ?>> webPush = Optional.empty();
        private Optional<Map<?, ?>> webhook = Optional.empty();
        private Optional<Map<?, ?>> windows8Push = Optional.empty();
        private Optional<Map<?, ?>> windowsPush = Optional.empty();

        private Builder() {}

        public Builder from(MessagesScheduleCreateCreateBodyMessages other) {
            androidPush(other.getAndroidPush());
            applePush(other.getApplePush());
            contentCard(other.getContentCard());
            email(other.getEmail());
            kindlePush(other.getKindlePush());
            webPush(other.getWebPush());
            webhook(other.getWebhook());
            windows8Push(other.getWindows8Push());
            windowsPush(other.getWindowsPush());
            return this;
        }

        /**
         * Sets value for `androidPush`
         */
        @JsonSetter("android_push")
        public Builder androidPush(Map<?, ?> androidPush) {
            this.androidPush = Optional.ofNullable(androidPush);

            return this;
        }

        public Builder androidPush(Optional<Map<?, ?>> androidPush) {
            this.androidPush = androidPush;
            return this;
        }

        /**
         * Sets value for `applePush`
         */
        @JsonSetter("apple_push")
        public Builder applePush(Map<?, ?> applePush) {
            this.applePush = Optional.ofNullable(applePush);

            return this;
        }

        public Builder applePush(Optional<Map<?, ?>> applePush) {
            this.applePush = applePush;
            return this;
        }

        /**
         * Sets value for `contentCard`
         */
        @JsonSetter("content_card")
        public Builder contentCard(Map<?, ?> contentCard) {
            this.contentCard = Optional.ofNullable(contentCard);

            return this;
        }

        public Builder contentCard(Optional<Map<?, ?>> contentCard) {
            this.contentCard = contentCard;
            return this;
        }

        /**
         * Sets value for `email`
         */
        @JsonSetter("email")
        public Builder email(Map<?, ?> email) {
            this.email = Optional.ofNullable(email);

            return this;
        }

        public Builder email(Optional<Map<?, ?>> email) {
            this.email = email;
            return this;
        }

        /**
         * Sets value for `kindlePush`
         */
        @JsonSetter("kindle_push")
        public Builder kindlePush(Map<?, ?> kindlePush) {
            this.kindlePush = Optional.ofNullable(kindlePush);

            return this;
        }

        public Builder kindlePush(Optional<Map<?, ?>> kindlePush) {
            this.kindlePush = kindlePush;
            return this;
        }

        /**
         * Sets value for `webPush`
         */
        @JsonSetter("web_push")
        public Builder webPush(Map<?, ?> webPush) {
            this.webPush = Optional.ofNullable(webPush);

            return this;
        }

        public Builder webPush(Optional<Map<?, ?>> webPush) {
            this.webPush = webPush;
            return this;
        }

        /**
         * Sets value for `webhook`
         */
        @JsonSetter("webhook")
        public Builder webhook(Map<?, ?> webhook) {
            this.webhook = Optional.ofNullable(webhook);

            return this;
        }

        public Builder webhook(Optional<Map<?, ?>> webhook) {
            this.webhook = webhook;
            return this;
        }

        /**
         * Sets value for `windows8Push`
         */
        @JsonSetter("windows8_push")
        public Builder windows8Push(Map<?, ?> windows8Push) {
            this.windows8Push = Optional.ofNullable(windows8Push);

            return this;
        }

        public Builder windows8Push(Optional<Map<?, ?>> windows8Push) {
            this.windows8Push = windows8Push;
            return this;
        }

        /**
         * Sets value for `windowsPush`
         */
        @JsonSetter("windows_push")
        public Builder windowsPush(Map<?, ?> windowsPush) {
            this.windowsPush = Optional.ofNullable(windowsPush);

            return this;
        }

        public Builder windowsPush(Optional<Map<?, ?>> windowsPush) {
            this.windowsPush = windowsPush;
            return this;
        }


        public MessagesScheduleCreateCreateBodyMessages build() {
            return new MessagesScheduleCreateCreateBodyMessages(
                       androidPush,
                       applePush,
                       contentCard,
                       email,
                       kindlePush,
                       webPush,
                       webhook,
                       windows8Push,
                       windowsPush
                   );
        }
    }

}



