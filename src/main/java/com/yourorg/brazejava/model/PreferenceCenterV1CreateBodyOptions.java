
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * PreferenceCenterV1CreateBodyOptions
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PreferenceCenterV1CreateBodyOptions.Builder.class)
public final class PreferenceCenterV1CreateBodyOptions {
    private final Optional<String> metaViewportContent;

    private PreferenceCenterV1CreateBodyOptions(
        Optional<String> metaViewportContent
    ) {
        this.metaViewportContent = metaViewportContent;
    }

    /**
     * Retrieves value for `metaViewportContent`
     */
    @JsonProperty("meta-viewport-content")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getMetaViewportContent() {
        return metaViewportContent.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof PreferenceCenterV1CreateBodyOptions &&
               equalTo((PreferenceCenterV1CreateBodyOptions) other);
    }

    private boolean equalTo(PreferenceCenterV1CreateBodyOptions other) {
        return
            metaViewportContent.equals(other.metaViewportContent)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.metaViewportContent
               );
    }

    @Override
    public String toString() {
        return "PreferenceCenterV1CreateBodyOptions{" +
               "metaViewportContent=" + metaViewportContent +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> metaViewportContent = Optional.empty();

        private Builder() {}

        public Builder from(PreferenceCenterV1CreateBodyOptions other) {
            metaViewportContent(other.getMetaViewportContent());
            return this;
        }

        /**
         * Sets value for `metaViewportContent`
         */
        @JsonSetter("meta-viewport-content")
        public Builder metaViewportContent(String metaViewportContent) {
            this.metaViewportContent = Optional.ofNullable(metaViewportContent);

            return this;
        }

        public Builder metaViewportContent(Optional<String> metaViewportContent) {
            this.metaViewportContent = metaViewportContent;
            return this;
        }


        public PreferenceCenterV1CreateBodyOptions build() {
            return new PreferenceCenterV1CreateBodyOptions(
                       metaViewportContent
                   );
        }
    }

}



