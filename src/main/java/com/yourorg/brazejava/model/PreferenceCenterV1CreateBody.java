
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * PreferenceCenterV1CreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PreferenceCenterV1CreateBody.Builder.class)
public final class PreferenceCenterV1CreateBody {
    private final Optional<String> confirmationPageHtml;
    private final Optional<String> name;
    private final Optional<PreferenceCenterV1CreateBodyOptions> options;
    private final Optional<String> preferenceCenterPageHtml;
    private final Optional<String> preferenceCenterTitle;
    private final Optional<String> state;

    private PreferenceCenterV1CreateBody(
        Optional<String> confirmationPageHtml,
        Optional<String> name,
        Optional<PreferenceCenterV1CreateBodyOptions> options,
        Optional<String> preferenceCenterPageHtml,
        Optional<String> preferenceCenterTitle,
        Optional<String> state
    ) {
        this.confirmationPageHtml = confirmationPageHtml;
        this.name = name;
        this.options = options;
        this.preferenceCenterPageHtml = preferenceCenterPageHtml;
        this.preferenceCenterTitle = preferenceCenterTitle;
        this.state = state;
    }

    /**
     * Retrieves value for `confirmationPageHtml`
     */
    @JsonProperty("confirmation_page_html")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getConfirmationPageHtml() {
        return confirmationPageHtml.orElse(null);
    }

    /**
     * Retrieves value for `name`
     */
    @JsonProperty("name")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getName() {
        return name.orElse(null);
    }

    /**
     * Retrieves value for `options`
     */
    @JsonProperty("options")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public PreferenceCenterV1CreateBodyOptions getOptions() {
        return options.orElse(null);
    }

    /**
     * Retrieves value for `preferenceCenterPageHtml`
     */
    @JsonProperty("preference_center_page_html")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getPreferenceCenterPageHtml() {
        return preferenceCenterPageHtml.orElse(null);
    }

    /**
     * Retrieves value for `preferenceCenterTitle`
     */
    @JsonProperty("preference_center_title")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getPreferenceCenterTitle() {
        return preferenceCenterTitle.orElse(null);
    }

    /**
     * Retrieves value for `state`
     */
    @JsonProperty("state")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getState() {
        return state.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof PreferenceCenterV1CreateBody &&
               equalTo((PreferenceCenterV1CreateBody) other);
    }

    private boolean equalTo(PreferenceCenterV1CreateBody other) {
        return
            confirmationPageHtml.equals(other.confirmationPageHtml) &&

            name.equals(other.name) &&

            options.equals(other.options) &&

            preferenceCenterPageHtml.equals(other.preferenceCenterPageHtml) &&

            preferenceCenterTitle.equals(other.preferenceCenterTitle) &&

            state.equals(other.state)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.confirmationPageHtml,
                   this.name,
                   this.options,
                   this.preferenceCenterPageHtml,
                   this.preferenceCenterTitle,
                   this.state
               );
    }

    @Override
    public String toString() {
        return "PreferenceCenterV1CreateBody{" +
               "confirmationPageHtml=" + confirmationPageHtml +
               "name=" + name +
               "options=" + options +
               "preferenceCenterPageHtml=" + preferenceCenterPageHtml +
               "preferenceCenterTitle=" + preferenceCenterTitle +
               "state=" + state +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> confirmationPageHtml = Optional.empty();
        private Optional<String> name = Optional.empty();
        private Optional<PreferenceCenterV1CreateBodyOptions> options = Optional.empty();
        private Optional<String> preferenceCenterPageHtml = Optional.empty();
        private Optional<String> preferenceCenterTitle = Optional.empty();
        private Optional<String> state = Optional.empty();

        private Builder() {}

        public Builder from(PreferenceCenterV1CreateBody other) {
            confirmationPageHtml(other.getConfirmationPageHtml());
            name(other.getName());
            options(other.getOptions());
            preferenceCenterPageHtml(other.getPreferenceCenterPageHtml());
            preferenceCenterTitle(other.getPreferenceCenterTitle());
            state(other.getState());
            return this;
        }

        /**
         * Sets value for `confirmationPageHtml`
         */
        @JsonSetter("confirmation_page_html")
        public Builder confirmationPageHtml(String confirmationPageHtml) {
            this.confirmationPageHtml = Optional.ofNullable(confirmationPageHtml);

            return this;
        }

        public Builder confirmationPageHtml(Optional<String> confirmationPageHtml) {
            this.confirmationPageHtml = confirmationPageHtml;
            return this;
        }

        /**
         * Sets value for `name`
         */
        @JsonSetter("name")
        public Builder name(String name) {
            this.name = Optional.ofNullable(name);

            return this;
        }

        public Builder name(Optional<String> name) {
            this.name = name;
            return this;
        }

        /**
         * Sets value for `options`
         */
        @JsonSetter("options")
        public Builder options(PreferenceCenterV1CreateBodyOptions options) {
            this.options = Optional.ofNullable(options);

            return this;
        }

        public Builder options(Optional<PreferenceCenterV1CreateBodyOptions> options) {
            this.options = options;
            return this;
        }

        /**
         * Sets value for `preferenceCenterPageHtml`
         */
        @JsonSetter("preference_center_page_html")
        public Builder preferenceCenterPageHtml(String preferenceCenterPageHtml) {
            this.preferenceCenterPageHtml = Optional.ofNullable(preferenceCenterPageHtml);

            return this;
        }

        public Builder preferenceCenterPageHtml(Optional<String> preferenceCenterPageHtml) {
            this.preferenceCenterPageHtml = preferenceCenterPageHtml;
            return this;
        }

        /**
         * Sets value for `preferenceCenterTitle`
         */
        @JsonSetter("preference_center_title")
        public Builder preferenceCenterTitle(String preferenceCenterTitle) {
            this.preferenceCenterTitle = Optional.ofNullable(preferenceCenterTitle);

            return this;
        }

        public Builder preferenceCenterTitle(Optional<String> preferenceCenterTitle) {
            this.preferenceCenterTitle = preferenceCenterTitle;
            return this;
        }

        /**
         * Sets value for `state`
         */
        @JsonSetter("state")
        public Builder state(String state) {
            this.state = Optional.ofNullable(state);

            return this;
        }

        public Builder state(Optional<String> state) {
            this.state = state;
            return this;
        }


        public PreferenceCenterV1CreateBody build() {
            return new PreferenceCenterV1CreateBody(
                       confirmationPageHtml,
                       name,
                       options,
                       preferenceCenterPageHtml,
                       preferenceCenterTitle,
                       state
                   );
        }
    }

}



