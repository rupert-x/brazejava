
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * TransactionalV1CampaignsSendCreateBodyRecipientItem
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TransactionalV1CampaignsSendCreateBodyRecipientItem.Builder.class)
public final class TransactionalV1CampaignsSendCreateBodyRecipientItem {
    private final Optional<String> externalUserId;

    private TransactionalV1CampaignsSendCreateBodyRecipientItem(
        Optional<String> externalUserId
    ) {
        this.externalUserId = externalUserId;
    }

    /**
     * Retrieves value for `externalUserId`
     */
    @JsonProperty("external_user_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getExternalUserId() {
        return externalUserId.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof TransactionalV1CampaignsSendCreateBodyRecipientItem &&
               equalTo((TransactionalV1CampaignsSendCreateBodyRecipientItem) other);
    }

    private boolean equalTo(TransactionalV1CampaignsSendCreateBodyRecipientItem other) {
        return
            externalUserId.equals(other.externalUserId)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.externalUserId
               );
    }

    @Override
    public String toString() {
        return "TransactionalV1CampaignsSendCreateBodyRecipientItem{" +
               "externalUserId=" + externalUserId +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> externalUserId = Optional.empty();

        private Builder() {}

        public Builder from(TransactionalV1CampaignsSendCreateBodyRecipientItem other) {
            externalUserId(other.getExternalUserId());
            return this;
        }

        /**
         * Sets value for `externalUserId`
         */
        @JsonSetter("external_user_id")
        public Builder externalUserId(String externalUserId) {
            this.externalUserId = Optional.ofNullable(externalUserId);

            return this;
        }

        public Builder externalUserId(Optional<String> externalUserId) {
            this.externalUserId = externalUserId;
            return this;
        }


        public TransactionalV1CampaignsSendCreateBodyRecipientItem build() {
            return new TransactionalV1CampaignsSendCreateBodyRecipientItem(
                       externalUserId
                   );
        }
    }

}



