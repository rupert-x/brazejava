
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * MessagesScheduleUpdateCreateBodyMessages
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MessagesScheduleUpdateCreateBodyMessages.Builder.class)
public final class MessagesScheduleUpdateCreateBodyMessages {
    private final Optional<MessagesScheduleUpdateCreateBodyMessagesAndroidPush> androidPush;
    private final Optional<MessagesScheduleUpdateCreateBodyMessagesApplePush> applePush;
    private final Optional<MessagesScheduleUpdateCreateBodyMessagesSms> sms;

    private MessagesScheduleUpdateCreateBodyMessages(
        Optional<MessagesScheduleUpdateCreateBodyMessagesAndroidPush> androidPush,
        Optional<MessagesScheduleUpdateCreateBodyMessagesApplePush> applePush,
        Optional<MessagesScheduleUpdateCreateBodyMessagesSms> sms
    ) {
        this.androidPush = androidPush;
        this.applePush = applePush;
        this.sms = sms;
    }

    /**
     * Retrieves value for `androidPush`
     */
    @JsonProperty("android_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public MessagesScheduleUpdateCreateBodyMessagesAndroidPush getAndroidPush() {
        return androidPush.orElse(null);
    }

    /**
     * Retrieves value for `applePush`
     */
    @JsonProperty("apple_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public MessagesScheduleUpdateCreateBodyMessagesApplePush getApplePush() {
        return applePush.orElse(null);
    }

    /**
     * Retrieves value for `sms`
     */
    @JsonProperty("sms")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public MessagesScheduleUpdateCreateBodyMessagesSms getSms() {
        return sms.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof MessagesScheduleUpdateCreateBodyMessages &&
               equalTo((MessagesScheduleUpdateCreateBodyMessages) other);
    }

    private boolean equalTo(MessagesScheduleUpdateCreateBodyMessages other) {
        return
            androidPush.equals(other.androidPush) &&

            applePush.equals(other.applePush) &&

            sms.equals(other.sms)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.androidPush,
                   this.applePush,
                   this.sms
               );
    }

    @Override
    public String toString() {
        return "MessagesScheduleUpdateCreateBodyMessages{" +
               "androidPush=" + androidPush +
               "applePush=" + applePush +
               "sms=" + sms +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<MessagesScheduleUpdateCreateBodyMessagesAndroidPush> androidPush =
            Optional.empty();
        private Optional<MessagesScheduleUpdateCreateBodyMessagesApplePush> applePush = Optional.empty();
        private Optional<MessagesScheduleUpdateCreateBodyMessagesSms> sms = Optional.empty();

        private Builder() {}

        public Builder from(MessagesScheduleUpdateCreateBodyMessages other) {
            androidPush(other.getAndroidPush());
            applePush(other.getApplePush());
            sms(other.getSms());
            return this;
        }

        /**
         * Sets value for `androidPush`
         */
        @JsonSetter("android_push")
        public Builder androidPush(MessagesScheduleUpdateCreateBodyMessagesAndroidPush androidPush) {
            this.androidPush = Optional.ofNullable(androidPush);

            return this;
        }

        public Builder androidPush(Optional<MessagesScheduleUpdateCreateBodyMessagesAndroidPush>
                                   androidPush) {
            this.androidPush = androidPush;
            return this;
        }

        /**
         * Sets value for `applePush`
         */
        @JsonSetter("apple_push")
        public Builder applePush(MessagesScheduleUpdateCreateBodyMessagesApplePush applePush) {
            this.applePush = Optional.ofNullable(applePush);

            return this;
        }

        public Builder applePush(Optional<MessagesScheduleUpdateCreateBodyMessagesApplePush> applePush) {
            this.applePush = applePush;
            return this;
        }

        /**
         * Sets value for `sms`
         */
        @JsonSetter("sms")
        public Builder sms(MessagesScheduleUpdateCreateBodyMessagesSms sms) {
            this.sms = Optional.ofNullable(sms);

            return this;
        }

        public Builder sms(Optional<MessagesScheduleUpdateCreateBodyMessagesSms> sms) {
            this.sms = sms;
            return this;
        }


        public MessagesScheduleUpdateCreateBodyMessages build() {
            return new MessagesScheduleUpdateCreateBodyMessages(
                       androidPush,
                       applePush,
                       sms
                   );
        }
    }

}



