
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * CampaignsTriggerScheduleDeleteCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CampaignsTriggerScheduleDeleteCreateBody.Builder.class)
public final class CampaignsTriggerScheduleDeleteCreateBody {
    private final Optional<String> campaignId;
    private final Optional<String> scheduleId;

    private CampaignsTriggerScheduleDeleteCreateBody(
        Optional<String> campaignId,
        Optional<String> scheduleId
    ) {
        this.campaignId = campaignId;
        this.scheduleId = scheduleId;
    }

    /**
     * Retrieves value for `campaignId`
     */
    @JsonProperty("campaign_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getCampaignId() {
        return campaignId.orElse(null);
    }

    /**
     * Retrieves value for `scheduleId`
     */
    @JsonProperty("schedule_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getScheduleId() {
        return scheduleId.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof CampaignsTriggerScheduleDeleteCreateBody &&
               equalTo((CampaignsTriggerScheduleDeleteCreateBody) other);
    }

    private boolean equalTo(CampaignsTriggerScheduleDeleteCreateBody other) {
        return
            campaignId.equals(other.campaignId) &&

            scheduleId.equals(other.scheduleId)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.campaignId,
                   this.scheduleId
               );
    }

    @Override
    public String toString() {
        return "CampaignsTriggerScheduleDeleteCreateBody{" +
               "campaignId=" + campaignId +
               "scheduleId=" + scheduleId +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> campaignId = Optional.empty();
        private Optional<String> scheduleId = Optional.empty();

        private Builder() {}

        public Builder from(CampaignsTriggerScheduleDeleteCreateBody other) {
            campaignId(other.getCampaignId());
            scheduleId(other.getScheduleId());
            return this;
        }

        /**
         * Sets value for `campaignId`
         */
        @JsonSetter("campaign_id")
        public Builder campaignId(String campaignId) {
            this.campaignId = Optional.ofNullable(campaignId);

            return this;
        }

        public Builder campaignId(Optional<String> campaignId) {
            this.campaignId = campaignId;
            return this;
        }

        /**
         * Sets value for `scheduleId`
         */
        @JsonSetter("schedule_id")
        public Builder scheduleId(String scheduleId) {
            this.scheduleId = Optional.ofNullable(scheduleId);

            return this;
        }

        public Builder scheduleId(Optional<String> scheduleId) {
            this.scheduleId = scheduleId;
            return this;
        }


        public CampaignsTriggerScheduleDeleteCreateBody build() {
            return new CampaignsTriggerScheduleDeleteCreateBody(
                       campaignId,
                       scheduleId
                   );
        }
    }

}



