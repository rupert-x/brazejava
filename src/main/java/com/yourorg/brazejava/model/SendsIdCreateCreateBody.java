
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * SendsIdCreateCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SendsIdCreateCreateBody.Builder.class)
public final class SendsIdCreateCreateBody {
    private final Optional<String> campaignId;
    private final Optional<String> sendId;

    private SendsIdCreateCreateBody(
        Optional<String> campaignId,
        Optional<String> sendId
    ) {
        this.campaignId = campaignId;
        this.sendId = sendId;
    }

    /**
     * Retrieves value for `campaignId`
     */
    @JsonProperty("campaign_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getCampaignId() {
        return campaignId.orElse(null);
    }

    /**
     * Retrieves value for `sendId`
     */
    @JsonProperty("send_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getSendId() {
        return sendId.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof SendsIdCreateCreateBody && equalTo((SendsIdCreateCreateBody) other);
    }

    private boolean equalTo(SendsIdCreateCreateBody other) {
        return
            campaignId.equals(other.campaignId) &&

            sendId.equals(other.sendId)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.campaignId,
                   this.sendId
               );
    }

    @Override
    public String toString() {
        return "SendsIdCreateCreateBody{" +
               "campaignId=" + campaignId +
               "sendId=" + sendId +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> campaignId = Optional.empty();
        private Optional<String> sendId = Optional.empty();

        private Builder() {}

        public Builder from(SendsIdCreateCreateBody other) {
            campaignId(other.getCampaignId());
            sendId(other.getSendId());
            return this;
        }

        /**
         * Sets value for `campaignId`
         */
        @JsonSetter("campaign_id")
        public Builder campaignId(String campaignId) {
            this.campaignId = Optional.ofNullable(campaignId);

            return this;
        }

        public Builder campaignId(Optional<String> campaignId) {
            this.campaignId = campaignId;
            return this;
        }

        /**
         * Sets value for `sendId`
         */
        @JsonSetter("send_id")
        public Builder sendId(String sendId) {
            this.sendId = Optional.ofNullable(sendId);

            return this;
        }

        public Builder sendId(Optional<String> sendId) {
            this.sendId = sendId;
            return this;
        }


        public SendsIdCreateCreateBody build() {
            return new SendsIdCreateCreateBody(
                       campaignId,
                       sendId
                   );
        }
    }

}



