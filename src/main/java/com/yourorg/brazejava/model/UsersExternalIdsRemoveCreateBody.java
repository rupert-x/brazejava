
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * UsersExternalIdsRemoveCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UsersExternalIdsRemoveCreateBody.Builder.class)
public final class UsersExternalIdsRemoveCreateBody {
    private final Optional<List<String>> externalIds;

    private UsersExternalIdsRemoveCreateBody(
        Optional<List<String>> externalIds
    ) {
        this.externalIds = externalIds;
    }

    /**
     * Retrieves value for `externalIds`
     */
    @JsonProperty("external_ids")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<String> getExternalIds() {
        return externalIds.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof UsersExternalIdsRemoveCreateBody &&
               equalTo((UsersExternalIdsRemoveCreateBody) other);
    }

    private boolean equalTo(UsersExternalIdsRemoveCreateBody other) {
        return
            externalIds.equals(other.externalIds)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.externalIds
               );
    }

    @Override
    public String toString() {
        return "UsersExternalIdsRemoveCreateBody{" +
               "externalIds=" + externalIds +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<String>> externalIds = Optional.empty();

        private Builder() {}

        public Builder from(UsersExternalIdsRemoveCreateBody other) {
            externalIds(other.getExternalIds());
            return this;
        }

        /**
         * Sets value for `externalIds`
         */
        @JsonSetter("external_ids")
        public Builder externalIds(List<String> externalIds) {
            this.externalIds = Optional.ofNullable(externalIds);

            return this;
        }

        public Builder externalIds(Optional<List<String>> externalIds) {
            this.externalIds = externalIds;
            return this;
        }


        public UsersExternalIdsRemoveCreateBody build() {
            return new UsersExternalIdsRemoveCreateBody(
                       externalIds
                   );
        }
    }

}



