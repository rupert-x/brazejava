
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * CanvasTriggerSendCreateBodyCanvasEntryProperties
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CanvasTriggerSendCreateBodyCanvasEntryProperties.Builder.class)
public final class CanvasTriggerSendCreateBodyCanvasEntryProperties {
    private final Optional<String> productName;
    private final Optional<Double> productPrice;

    private CanvasTriggerSendCreateBodyCanvasEntryProperties(
        Optional<String> productName,
        Optional<Double> productPrice
    ) {
        this.productName = productName;
        this.productPrice = productPrice;
    }

    /**
     * Retrieves value for `productName`
     */
    @JsonProperty("product_name")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getProductName() {
        return productName.orElse(null);
    }

    /**
     * Retrieves value for `productPrice`
     */
    @JsonProperty("product_price")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Double getProductPrice() {
        return productPrice.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof CanvasTriggerSendCreateBodyCanvasEntryProperties &&
               equalTo((CanvasTriggerSendCreateBodyCanvasEntryProperties) other);
    }

    private boolean equalTo(CanvasTriggerSendCreateBodyCanvasEntryProperties other) {
        return
            productName.equals(other.productName) &&

            productPrice.equals(other.productPrice)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.productName,
                   this.productPrice
               );
    }

    @Override
    public String toString() {
        return "CanvasTriggerSendCreateBodyCanvasEntryProperties{" +
               "productName=" + productName +
               "productPrice=" + productPrice +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> productName = Optional.empty();
        private Optional<Double> productPrice = Optional.empty();

        private Builder() {}

        public Builder from(CanvasTriggerSendCreateBodyCanvasEntryProperties other) {
            productName(other.getProductName());
            productPrice(other.getProductPrice());
            return this;
        }

        /**
         * Sets value for `productName`
         */
        @JsonSetter("product_name")
        public Builder productName(String productName) {
            this.productName = Optional.ofNullable(productName);

            return this;
        }

        public Builder productName(Optional<String> productName) {
            this.productName = productName;
            return this;
        }

        /**
         * Sets value for `productPrice`
         */
        @JsonSetter("product_price")
        public Builder productPrice(Double productPrice) {
            this.productPrice = Optional.ofNullable(productPrice);

            return this;
        }

        public Builder productPrice(Optional<Double> productPrice) {
            this.productPrice = productPrice;
            return this;
        }


        public CanvasTriggerSendCreateBodyCanvasEntryProperties build() {
            return new CanvasTriggerSendCreateBodyCanvasEntryProperties(
                       productName,
                       productPrice
                   );
        }
    }

}



