
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * UsersIdentifyCreateBodyAliasesToIdentifyItem
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UsersIdentifyCreateBodyAliasesToIdentifyItem.Builder.class)
public final class UsersIdentifyCreateBodyAliasesToIdentifyItem {
    private final Optional<String> externalId;
    private final Optional<UsersIdentifyCreateBodyAliasesToIdentifyItemUserAlias> userAlias;

    private UsersIdentifyCreateBodyAliasesToIdentifyItem(
        Optional<String> externalId,
        Optional<UsersIdentifyCreateBodyAliasesToIdentifyItemUserAlias> userAlias
    ) {
        this.externalId = externalId;
        this.userAlias = userAlias;
    }

    /**
     * Retrieves value for `externalId`
     */
    @JsonProperty("external_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getExternalId() {
        return externalId.orElse(null);
    }

    /**
     * Retrieves value for `userAlias`
     */
    @JsonProperty("user_alias")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public UsersIdentifyCreateBodyAliasesToIdentifyItemUserAlias getUserAlias() {
        return userAlias.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof UsersIdentifyCreateBodyAliasesToIdentifyItem &&
               equalTo((UsersIdentifyCreateBodyAliasesToIdentifyItem) other);
    }

    private boolean equalTo(UsersIdentifyCreateBodyAliasesToIdentifyItem other) {
        return
            externalId.equals(other.externalId) &&

            userAlias.equals(other.userAlias)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.externalId,
                   this.userAlias
               );
    }

    @Override
    public String toString() {
        return "UsersIdentifyCreateBodyAliasesToIdentifyItem{" +
               "externalId=" + externalId +
               "userAlias=" + userAlias +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> externalId = Optional.empty();
        private Optional<UsersIdentifyCreateBodyAliasesToIdentifyItemUserAlias> userAlias =
            Optional.empty();

        private Builder() {}

        public Builder from(UsersIdentifyCreateBodyAliasesToIdentifyItem other) {
            externalId(other.getExternalId());
            userAlias(other.getUserAlias());
            return this;
        }

        /**
         * Sets value for `externalId`
         */
        @JsonSetter("external_id")
        public Builder externalId(String externalId) {
            this.externalId = Optional.ofNullable(externalId);

            return this;
        }

        public Builder externalId(Optional<String> externalId) {
            this.externalId = externalId;
            return this;
        }

        /**
         * Sets value for `userAlias`
         */
        @JsonSetter("user_alias")
        public Builder userAlias(UsersIdentifyCreateBodyAliasesToIdentifyItemUserAlias userAlias) {
            this.userAlias = Optional.ofNullable(userAlias);

            return this;
        }

        public Builder userAlias(Optional<UsersIdentifyCreateBodyAliasesToIdentifyItemUserAlias>
                                 userAlias) {
            this.userAlias = userAlias;
            return this;
        }


        public UsersIdentifyCreateBodyAliasesToIdentifyItem build() {
            return new UsersIdentifyCreateBodyAliasesToIdentifyItem(
                       externalId,
                       userAlias
                   );
        }
    }

}



