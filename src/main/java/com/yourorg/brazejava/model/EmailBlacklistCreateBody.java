
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * EmailBlacklistCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = EmailBlacklistCreateBody.Builder.class)
public final class EmailBlacklistCreateBody {
    private final Optional<List<String>> email;

    private EmailBlacklistCreateBody(
        Optional<List<String>> email
    ) {
        this.email = email;
    }

    /**
     * Retrieves value for `email`
     */
    @JsonProperty("email")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<String> getEmail() {
        return email.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof EmailBlacklistCreateBody && equalTo((EmailBlacklistCreateBody) other);
    }

    private boolean equalTo(EmailBlacklistCreateBody other) {
        return
            email.equals(other.email)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.email
               );
    }

    @Override
    public String toString() {
        return "EmailBlacklistCreateBody{" +
               "email=" + email +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<String>> email = Optional.empty();

        private Builder() {}

        public Builder from(EmailBlacklistCreateBody other) {
            email(other.getEmail());
            return this;
        }

        /**
         * Sets value for `email`
         */
        @JsonSetter("email")
        public Builder email(List<String> email) {
            this.email = Optional.ofNullable(email);

            return this;
        }

        public Builder email(Optional<List<String>> email) {
            this.email = email;
            return this;
        }


        public EmailBlacklistCreateBody build() {
            return new EmailBlacklistCreateBody(
                       email
                   );
        }
    }

}



