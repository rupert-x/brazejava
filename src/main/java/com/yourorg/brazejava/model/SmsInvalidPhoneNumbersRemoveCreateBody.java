
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * SmsInvalidPhoneNumbersRemoveCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SmsInvalidPhoneNumbersRemoveCreateBody.Builder.class)
public final class SmsInvalidPhoneNumbersRemoveCreateBody {
    private final Optional<List<String>> phoneNumbers;

    private SmsInvalidPhoneNumbersRemoveCreateBody(
        Optional<List<String>> phoneNumbers
    ) {
        this.phoneNumbers = phoneNumbers;
    }

    /**
     * Retrieves value for `phoneNumbers`
     */
    @JsonProperty("phone_numbers")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<String> getPhoneNumbers() {
        return phoneNumbers.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof SmsInvalidPhoneNumbersRemoveCreateBody &&
               equalTo((SmsInvalidPhoneNumbersRemoveCreateBody) other);
    }

    private boolean equalTo(SmsInvalidPhoneNumbersRemoveCreateBody other) {
        return
            phoneNumbers.equals(other.phoneNumbers)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.phoneNumbers
               );
    }

    @Override
    public String toString() {
        return "SmsInvalidPhoneNumbersRemoveCreateBody{" +
               "phoneNumbers=" + phoneNumbers +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<String>> phoneNumbers = Optional.empty();

        private Builder() {}

        public Builder from(SmsInvalidPhoneNumbersRemoveCreateBody other) {
            phoneNumbers(other.getPhoneNumbers());
            return this;
        }

        /**
         * Sets value for `phoneNumbers`
         */
        @JsonSetter("phone_numbers")
        public Builder phoneNumbers(List<String> phoneNumbers) {
            this.phoneNumbers = Optional.ofNullable(phoneNumbers);

            return this;
        }

        public Builder phoneNumbers(Optional<List<String>> phoneNumbers) {
            this.phoneNumbers = phoneNumbers;
            return this;
        }


        public SmsInvalidPhoneNumbersRemoveCreateBody build() {
            return new SmsInvalidPhoneNumbersRemoveCreateBody(
                       phoneNumbers
                   );
        }
    }

}



