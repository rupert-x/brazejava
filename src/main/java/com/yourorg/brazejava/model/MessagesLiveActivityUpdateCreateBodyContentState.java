
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * MessagesLiveActivityUpdateCreateBodyContentState
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MessagesLiveActivityUpdateCreateBodyContentState.Builder.class)
public final class MessagesLiveActivityUpdateCreateBodyContentState {
    private final Optional<Integer> teamOneScore;
    private final Optional<Integer> teamTwoScore;

    private MessagesLiveActivityUpdateCreateBodyContentState(
        Optional<Integer> teamOneScore,
        Optional<Integer> teamTwoScore
    ) {
        this.teamOneScore = teamOneScore;
        this.teamTwoScore = teamTwoScore;
    }

    /**
     * Retrieves value for `teamOneScore`
     */
    @JsonProperty("teamOneScore")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Integer getTeamOneScore() {
        return teamOneScore.orElse(null);
    }

    /**
     * Retrieves value for `teamTwoScore`
     */
    @JsonProperty("teamTwoScore")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public Integer getTeamTwoScore() {
        return teamTwoScore.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof MessagesLiveActivityUpdateCreateBodyContentState &&
               equalTo((MessagesLiveActivityUpdateCreateBodyContentState) other);
    }

    private boolean equalTo(MessagesLiveActivityUpdateCreateBodyContentState other) {
        return
            teamOneScore.equals(other.teamOneScore) &&

            teamTwoScore.equals(other.teamTwoScore)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.teamOneScore,
                   this.teamTwoScore
               );
    }

    @Override
    public String toString() {
        return "MessagesLiveActivityUpdateCreateBodyContentState{" +
               "teamOneScore=" + teamOneScore +
               "teamTwoScore=" + teamTwoScore +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Integer> teamOneScore = Optional.empty();
        private Optional<Integer> teamTwoScore = Optional.empty();

        private Builder() {}

        public Builder from(MessagesLiveActivityUpdateCreateBodyContentState other) {
            teamOneScore(other.getTeamOneScore());
            teamTwoScore(other.getTeamTwoScore());
            return this;
        }

        /**
         * Sets value for `teamOneScore`
         */
        @JsonSetter("teamOneScore")
        public Builder teamOneScore(Integer teamOneScore) {
            this.teamOneScore = Optional.ofNullable(teamOneScore);

            return this;
        }

        public Builder teamOneScore(Optional<Integer> teamOneScore) {
            this.teamOneScore = teamOneScore;
            return this;
        }

        /**
         * Sets value for `teamTwoScore`
         */
        @JsonSetter("teamTwoScore")
        public Builder teamTwoScore(Integer teamTwoScore) {
            this.teamTwoScore = Optional.ofNullable(teamTwoScore);

            return this;
        }

        public Builder teamTwoScore(Optional<Integer> teamTwoScore) {
            this.teamTwoScore = teamTwoScore;
            return this;
        }


        public MessagesLiveActivityUpdateCreateBodyContentState build() {
            return new MessagesLiveActivityUpdateCreateBodyContentState(
                       teamOneScore,
                       teamTwoScore
                   );
        }
    }

}



