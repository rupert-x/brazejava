
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * CatalogsItemsCreate1Body
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CatalogsItemsCreate1Body.Builder.class)
public final class CatalogsItemsCreate1Body {
    private final Optional<List<Map<?, ?>>> items;

    private CatalogsItemsCreate1Body(
        Optional<List<Map<?, ?>>> items
    ) {
        this.items = items;
    }

    /**
     * Retrieves value for `items`
     */
    @JsonProperty("items")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<Map<?, ?>> getItems() {
        return items.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof CatalogsItemsCreate1Body && equalTo((CatalogsItemsCreate1Body) other);
    }

    private boolean equalTo(CatalogsItemsCreate1Body other) {
        return
            items.equals(other.items)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.items
               );
    }

    @Override
    public String toString() {
        return "CatalogsItemsCreate1Body{" +
               "items=" + items +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<Map<?, ?>>> items = Optional.empty();

        private Builder() {}

        public Builder from(CatalogsItemsCreate1Body other) {
            items(other.getItems());
            return this;
        }

        /**
         * Sets value for `items`
         */
        @JsonSetter("items")
        public Builder items(List<Map<?, ?>> items) {
            this.items = Optional.ofNullable(items);

            return this;
        }

        public Builder items(Optional<List<Map<?, ?>>> items) {
            this.items = items;
            return this;
        }


        public CatalogsItemsCreate1Body build() {
            return new CatalogsItemsCreate1Body(
                       items
                   );
        }
    }

}



