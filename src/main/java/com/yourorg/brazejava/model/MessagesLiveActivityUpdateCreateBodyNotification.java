
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * MessagesLiveActivityUpdateCreateBodyNotification
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MessagesLiveActivityUpdateCreateBodyNotification.Builder.class)
public final class MessagesLiveActivityUpdateCreateBodyNotification {
    private final Optional<MessagesLiveActivityUpdateCreateBodyNotificationAlert> alert;

    private MessagesLiveActivityUpdateCreateBodyNotification(
        Optional<MessagesLiveActivityUpdateCreateBodyNotificationAlert> alert
    ) {
        this.alert = alert;
    }

    /**
     * Retrieves value for `alert`
     */
    @JsonProperty("alert")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public MessagesLiveActivityUpdateCreateBodyNotificationAlert getAlert() {
        return alert.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof MessagesLiveActivityUpdateCreateBodyNotification &&
               equalTo((MessagesLiveActivityUpdateCreateBodyNotification) other);
    }

    private boolean equalTo(MessagesLiveActivityUpdateCreateBodyNotification other) {
        return
            alert.equals(other.alert)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.alert
               );
    }

    @Override
    public String toString() {
        return "MessagesLiveActivityUpdateCreateBodyNotification{" +
               "alert=" + alert +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<MessagesLiveActivityUpdateCreateBodyNotificationAlert> alert = Optional.empty();

        private Builder() {}

        public Builder from(MessagesLiveActivityUpdateCreateBodyNotification other) {
            alert(other.getAlert());
            return this;
        }

        /**
         * Sets value for `alert`
         */
        @JsonSetter("alert")
        public Builder alert(MessagesLiveActivityUpdateCreateBodyNotificationAlert alert) {
            this.alert = Optional.ofNullable(alert);

            return this;
        }

        public Builder alert(Optional<MessagesLiveActivityUpdateCreateBodyNotificationAlert> alert) {
            this.alert = alert;
            return this;
        }


        public MessagesLiveActivityUpdateCreateBodyNotification build() {
            return new MessagesLiveActivityUpdateCreateBodyNotification(
                       alert
                   );
        }
    }

}



