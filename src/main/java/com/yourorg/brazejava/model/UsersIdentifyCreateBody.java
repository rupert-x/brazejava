
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * UsersIdentifyCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UsersIdentifyCreateBody.Builder.class)
public final class UsersIdentifyCreateBody {
    private final Optional<List<UsersIdentifyCreateBodyAliasesToIdentifyItem>> aliasesToIdentify;

    private UsersIdentifyCreateBody(
        Optional<List<UsersIdentifyCreateBodyAliasesToIdentifyItem>> aliasesToIdentify
    ) {
        this.aliasesToIdentify = aliasesToIdentify;
    }

    /**
     * Retrieves value for `aliasesToIdentify`
     */
    @JsonProperty("aliases_to_identify")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<UsersIdentifyCreateBodyAliasesToIdentifyItem> getAliasesToIdentify() {
        return aliasesToIdentify.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof UsersIdentifyCreateBody && equalTo((UsersIdentifyCreateBody) other);
    }

    private boolean equalTo(UsersIdentifyCreateBody other) {
        return
            aliasesToIdentify.equals(other.aliasesToIdentify)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.aliasesToIdentify
               );
    }

    @Override
    public String toString() {
        return "UsersIdentifyCreateBody{" +
               "aliasesToIdentify=" + aliasesToIdentify +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<UsersIdentifyCreateBodyAliasesToIdentifyItem>> aliasesToIdentify =
            Optional.empty();

        private Builder() {}

        public Builder from(UsersIdentifyCreateBody other) {
            aliasesToIdentify(other.getAliasesToIdentify());
            return this;
        }

        /**
         * Sets value for `aliasesToIdentify`
         */
        @JsonSetter("aliases_to_identify")
        public Builder aliasesToIdentify(List<UsersIdentifyCreateBodyAliasesToIdentifyItem>
                                         aliasesToIdentify) {
            this.aliasesToIdentify = Optional.ofNullable(aliasesToIdentify);

            return this;
        }

        public Builder aliasesToIdentify(Optional<List<UsersIdentifyCreateBodyAliasesToIdentifyItem>>
                                         aliasesToIdentify) {
            this.aliasesToIdentify = aliasesToIdentify;
            return this;
        }


        public UsersIdentifyCreateBody build() {
            return new UsersIdentifyCreateBody(
                       aliasesToIdentify
                   );
        }
    }

}



