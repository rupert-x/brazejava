
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * UsersExportGlobalControlGroupCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UsersExportGlobalControlGroupCreateBody.Builder.class)
public final class UsersExportGlobalControlGroupCreateBody {
    private final Optional<String> callbackEndpoint;
    private final Optional<List<String>> fieldsToExport;
    private final Optional<String> outputFormat;

    private UsersExportGlobalControlGroupCreateBody(
        Optional<String> callbackEndpoint,
        Optional<List<String>> fieldsToExport,
        Optional<String> outputFormat
    ) {
        this.callbackEndpoint = callbackEndpoint;
        this.fieldsToExport = fieldsToExport;
        this.outputFormat = outputFormat;
    }

    /**
     * Retrieves value for `callbackEndpoint`
     */
    @JsonProperty("callback_endpoint")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getCallbackEndpoint() {
        return callbackEndpoint.orElse(null);
    }

    /**
     * Retrieves value for `fieldsToExport`
     */
    @JsonProperty("fields_to_export")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<String> getFieldsToExport() {
        return fieldsToExport.orElse(null);
    }

    /**
     * Retrieves value for `outputFormat`
     */
    @JsonProperty("output_format")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getOutputFormat() {
        return outputFormat.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof UsersExportGlobalControlGroupCreateBody &&
               equalTo((UsersExportGlobalControlGroupCreateBody) other);
    }

    private boolean equalTo(UsersExportGlobalControlGroupCreateBody other) {
        return
            callbackEndpoint.equals(other.callbackEndpoint) &&

            fieldsToExport.equals(other.fieldsToExport) &&

            outputFormat.equals(other.outputFormat)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.callbackEndpoint,
                   this.fieldsToExport,
                   this.outputFormat
               );
    }

    @Override
    public String toString() {
        return "UsersExportGlobalControlGroupCreateBody{" +
               "callbackEndpoint=" + callbackEndpoint +
               "fieldsToExport=" + fieldsToExport +
               "outputFormat=" + outputFormat +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> callbackEndpoint = Optional.empty();
        private Optional<List<String>> fieldsToExport = Optional.empty();
        private Optional<String> outputFormat = Optional.empty();

        private Builder() {}

        public Builder from(UsersExportGlobalControlGroupCreateBody other) {
            callbackEndpoint(other.getCallbackEndpoint());
            fieldsToExport(other.getFieldsToExport());
            outputFormat(other.getOutputFormat());
            return this;
        }

        /**
         * Sets value for `callbackEndpoint`
         */
        @JsonSetter("callback_endpoint")
        public Builder callbackEndpoint(String callbackEndpoint) {
            this.callbackEndpoint = Optional.ofNullable(callbackEndpoint);

            return this;
        }

        public Builder callbackEndpoint(Optional<String> callbackEndpoint) {
            this.callbackEndpoint = callbackEndpoint;
            return this;
        }

        /**
         * Sets value for `fieldsToExport`
         */
        @JsonSetter("fields_to_export")
        public Builder fieldsToExport(List<String> fieldsToExport) {
            this.fieldsToExport = Optional.ofNullable(fieldsToExport);

            return this;
        }

        public Builder fieldsToExport(Optional<List<String>> fieldsToExport) {
            this.fieldsToExport = fieldsToExport;
            return this;
        }

        /**
         * Sets value for `outputFormat`
         */
        @JsonSetter("output_format")
        public Builder outputFormat(String outputFormat) {
            this.outputFormat = Optional.ofNullable(outputFormat);

            return this;
        }

        public Builder outputFormat(Optional<String> outputFormat) {
            this.outputFormat = outputFormat;
            return this;
        }


        public UsersExportGlobalControlGroupCreateBody build() {
            return new UsersExportGlobalControlGroupCreateBody(
                       callbackEndpoint,
                       fieldsToExport,
                       outputFormat
                   );
        }
    }

}



