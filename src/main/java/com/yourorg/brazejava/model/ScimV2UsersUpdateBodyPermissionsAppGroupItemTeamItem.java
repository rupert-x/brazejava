
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem.Builder.class)
public final class ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem {
    private final Optional<String> teamName;
    private final Optional<List<String>> teamPermissions;

    private ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem(
        Optional<String> teamName,
        Optional<List<String>> teamPermissions
    ) {
        this.teamName = teamName;
        this.teamPermissions = teamPermissions;
    }

    /**
     * Retrieves value for `teamName`
     */
    @JsonProperty("teamName")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getTeamName() {
        return teamName.orElse(null);
    }

    /**
     * Retrieves value for `teamPermissions`
     */
    @JsonProperty("teamPermissions")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<String> getTeamPermissions() {
        return teamPermissions.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem &&
               equalTo((ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem) other);
    }

    private boolean equalTo(ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem other) {
        return
            teamName.equals(other.teamName) &&

            teamPermissions.equals(other.teamPermissions)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.teamName,
                   this.teamPermissions
               );
    }

    @Override
    public String toString() {
        return "ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem{" +
               "teamName=" + teamName +
               "teamPermissions=" + teamPermissions +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> teamName = Optional.empty();
        private Optional<List<String>> teamPermissions = Optional.empty();

        private Builder() {}

        public Builder from(ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem other) {
            teamName(other.getTeamName());
            teamPermissions(other.getTeamPermissions());
            return this;
        }

        /**
         * Sets value for `teamName`
         */
        @JsonSetter("teamName")
        public Builder teamName(String teamName) {
            this.teamName = Optional.ofNullable(teamName);

            return this;
        }

        public Builder teamName(Optional<String> teamName) {
            this.teamName = teamName;
            return this;
        }

        /**
         * Sets value for `teamPermissions`
         */
        @JsonSetter("teamPermissions")
        public Builder teamPermissions(List<String> teamPermissions) {
            this.teamPermissions = Optional.ofNullable(teamPermissions);

            return this;
        }

        public Builder teamPermissions(Optional<List<String>> teamPermissions) {
            this.teamPermissions = teamPermissions;
            return this;
        }


        public ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem build() {
            return new ScimV2UsersUpdateBodyPermissionsAppGroupItemTeamItem(
                       teamName,
                       teamPermissions
                   );
        }
    }

}



