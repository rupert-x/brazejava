
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * MessagesSendCreateBodyMessages
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MessagesSendCreateBodyMessages.Builder.class)
public final class MessagesSendCreateBodyMessages {
    private final Optional<String> androidPush;
    private final Optional<String> applePush;
    private final Optional<String> contentCard;
    private final Optional<String> email;
    private final Optional<String> kindlePush;
    private final Optional<String> webPush;
    private final Optional<String> windowsPhone8Push;
    private final Optional<String> windowsUniversalPush;

    private MessagesSendCreateBodyMessages(
        Optional<String> androidPush,
        Optional<String> applePush,
        Optional<String> contentCard,
        Optional<String> email,
        Optional<String> kindlePush,
        Optional<String> webPush,
        Optional<String> windowsPhone8Push,
        Optional<String> windowsUniversalPush
    ) {
        this.androidPush = androidPush;
        this.applePush = applePush;
        this.contentCard = contentCard;
        this.email = email;
        this.kindlePush = kindlePush;
        this.webPush = webPush;
        this.windowsPhone8Push = windowsPhone8Push;
        this.windowsUniversalPush = windowsUniversalPush;
    }

    /**
     * Retrieves value for `androidPush`
     */
    @JsonProperty("android_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getAndroidPush() {
        return androidPush.orElse(null);
    }

    /**
     * Retrieves value for `applePush`
     */
    @JsonProperty("apple_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getApplePush() {
        return applePush.orElse(null);
    }

    /**
     * Retrieves value for `contentCard`
     */
    @JsonProperty("content_card")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getContentCard() {
        return contentCard.orElse(null);
    }

    /**
     * Retrieves value for `email`
     */
    @JsonProperty("email")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getEmail() {
        return email.orElse(null);
    }

    /**
     * Retrieves value for `kindlePush`
     */
    @JsonProperty("kindle_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getKindlePush() {
        return kindlePush.orElse(null);
    }

    /**
     * Retrieves value for `webPush`
     */
    @JsonProperty("web_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getWebPush() {
        return webPush.orElse(null);
    }

    /**
     * Retrieves value for `windowsPhone8Push`
     */
    @JsonProperty("windows_phone8_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getWindowsPhone8Push() {
        return windowsPhone8Push.orElse(null);
    }

    /**
     * Retrieves value for `windowsUniversalPush`
     */
    @JsonProperty("windows_universal_push")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getWindowsUniversalPush() {
        return windowsUniversalPush.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof MessagesSendCreateBodyMessages &&
               equalTo((MessagesSendCreateBodyMessages) other);
    }

    private boolean equalTo(MessagesSendCreateBodyMessages other) {
        return
            androidPush.equals(other.androidPush) &&

            applePush.equals(other.applePush) &&

            contentCard.equals(other.contentCard) &&

            email.equals(other.email) &&

            kindlePush.equals(other.kindlePush) &&

            webPush.equals(other.webPush) &&

            windowsPhone8Push.equals(other.windowsPhone8Push) &&

            windowsUniversalPush.equals(other.windowsUniversalPush)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.androidPush,
                   this.applePush,
                   this.contentCard,
                   this.email,
                   this.kindlePush,
                   this.webPush,
                   this.windowsPhone8Push,
                   this.windowsUniversalPush
               );
    }

    @Override
    public String toString() {
        return "MessagesSendCreateBodyMessages{" +
               "androidPush=" + androidPush +
               "applePush=" + applePush +
               "contentCard=" + contentCard +
               "email=" + email +
               "kindlePush=" + kindlePush +
               "webPush=" + webPush +
               "windowsPhone8Push=" + windowsPhone8Push +
               "windowsUniversalPush=" + windowsUniversalPush +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> androidPush = Optional.empty();
        private Optional<String> applePush = Optional.empty();
        private Optional<String> contentCard = Optional.empty();
        private Optional<String> email = Optional.empty();
        private Optional<String> kindlePush = Optional.empty();
        private Optional<String> webPush = Optional.empty();
        private Optional<String> windowsPhone8Push = Optional.empty();
        private Optional<String> windowsUniversalPush = Optional.empty();

        private Builder() {}

        public Builder from(MessagesSendCreateBodyMessages other) {
            androidPush(other.getAndroidPush());
            applePush(other.getApplePush());
            contentCard(other.getContentCard());
            email(other.getEmail());
            kindlePush(other.getKindlePush());
            webPush(other.getWebPush());
            windowsPhone8Push(other.getWindowsPhone8Push());
            windowsUniversalPush(other.getWindowsUniversalPush());
            return this;
        }

        /**
         * Sets value for `androidPush`
         */
        @JsonSetter("android_push")
        public Builder androidPush(String androidPush) {
            this.androidPush = Optional.ofNullable(androidPush);

            return this;
        }

        public Builder androidPush(Optional<String> androidPush) {
            this.androidPush = androidPush;
            return this;
        }

        /**
         * Sets value for `applePush`
         */
        @JsonSetter("apple_push")
        public Builder applePush(String applePush) {
            this.applePush = Optional.ofNullable(applePush);

            return this;
        }

        public Builder applePush(Optional<String> applePush) {
            this.applePush = applePush;
            return this;
        }

        /**
         * Sets value for `contentCard`
         */
        @JsonSetter("content_card")
        public Builder contentCard(String contentCard) {
            this.contentCard = Optional.ofNullable(contentCard);

            return this;
        }

        public Builder contentCard(Optional<String> contentCard) {
            this.contentCard = contentCard;
            return this;
        }

        /**
         * Sets value for `email`
         */
        @JsonSetter("email")
        public Builder email(String email) {
            this.email = Optional.ofNullable(email);

            return this;
        }

        public Builder email(Optional<String> email) {
            this.email = email;
            return this;
        }

        /**
         * Sets value for `kindlePush`
         */
        @JsonSetter("kindle_push")
        public Builder kindlePush(String kindlePush) {
            this.kindlePush = Optional.ofNullable(kindlePush);

            return this;
        }

        public Builder kindlePush(Optional<String> kindlePush) {
            this.kindlePush = kindlePush;
            return this;
        }

        /**
         * Sets value for `webPush`
         */
        @JsonSetter("web_push")
        public Builder webPush(String webPush) {
            this.webPush = Optional.ofNullable(webPush);

            return this;
        }

        public Builder webPush(Optional<String> webPush) {
            this.webPush = webPush;
            return this;
        }

        /**
         * Sets value for `windowsPhone8Push`
         */
        @JsonSetter("windows_phone8_push")
        public Builder windowsPhone8Push(String windowsPhone8Push) {
            this.windowsPhone8Push = Optional.ofNullable(windowsPhone8Push);

            return this;
        }

        public Builder windowsPhone8Push(Optional<String> windowsPhone8Push) {
            this.windowsPhone8Push = windowsPhone8Push;
            return this;
        }

        /**
         * Sets value for `windowsUniversalPush`
         */
        @JsonSetter("windows_universal_push")
        public Builder windowsUniversalPush(String windowsUniversalPush) {
            this.windowsUniversalPush = Optional.ofNullable(windowsUniversalPush);

            return this;
        }

        public Builder windowsUniversalPush(Optional<String> windowsUniversalPush) {
            this.windowsUniversalPush = windowsUniversalPush;
            return this;
        }


        public MessagesSendCreateBodyMessages build() {
            return new MessagesSendCreateBodyMessages(
                       androidPush,
                       applePush,
                       contentCard,
                       email,
                       kindlePush,
                       webPush,
                       windowsPhone8Push,
                       windowsUniversalPush
                   );
        }
    }

}



