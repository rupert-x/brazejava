
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem.Builder.class)
public final class V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem {
    private final Optional<List<String>> emails;
    private final Optional<String> subscriptionGroupId;
    private final Optional<String> subscriptionState;

    private V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem(
        Optional<List<String>> emails,
        Optional<String> subscriptionGroupId,
        Optional<String> subscriptionState
    ) {
        this.emails = emails;
        this.subscriptionGroupId = subscriptionGroupId;
        this.subscriptionState = subscriptionState;
    }

    /**
     * Retrieves value for `emails`
     */
    @JsonProperty("emails")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<String> getEmails() {
        return emails.orElse(null);
    }

    /**
     * Retrieves value for `subscriptionGroupId`
     */
    @JsonProperty("subscription_group_id")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getSubscriptionGroupId() {
        return subscriptionGroupId.orElse(null);
    }

    /**
     * Retrieves value for `subscriptionState`
     */
    @JsonProperty("subscription_state")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getSubscriptionState() {
        return subscriptionState.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem &&
               equalTo((V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem) other);
    }

    private boolean equalTo(V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem other) {
        return
            emails.equals(other.emails) &&

            subscriptionGroupId.equals(other.subscriptionGroupId) &&

            subscriptionState.equals(other.subscriptionState)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.emails,
                   this.subscriptionGroupId,
                   this.subscriptionState
               );
    }

    @Override
    public String toString() {
        return "V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem{" +
               "emails=" + emails +
               "subscriptionGroupId=" + subscriptionGroupId +
               "subscriptionState=" + subscriptionState +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<String>> emails = Optional.empty();
        private Optional<String> subscriptionGroupId = Optional.empty();
        private Optional<String> subscriptionState = Optional.empty();

        private Builder() {}

        public Builder from(V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem other) {
            emails(other.getEmails());
            subscriptionGroupId(other.getSubscriptionGroupId());
            subscriptionState(other.getSubscriptionState());
            return this;
        }

        /**
         * Sets value for `emails`
         */
        @JsonSetter("emails")
        public Builder emails(List<String> emails) {
            this.emails = Optional.ofNullable(emails);

            return this;
        }

        public Builder emails(Optional<List<String>> emails) {
            this.emails = emails;
            return this;
        }

        /**
         * Sets value for `subscriptionGroupId`
         */
        @JsonSetter("subscription_group_id")
        public Builder subscriptionGroupId(String subscriptionGroupId) {
            this.subscriptionGroupId = Optional.ofNullable(subscriptionGroupId);

            return this;
        }

        public Builder subscriptionGroupId(Optional<String> subscriptionGroupId) {
            this.subscriptionGroupId = subscriptionGroupId;
            return this;
        }

        /**
         * Sets value for `subscriptionState`
         */
        @JsonSetter("subscription_state")
        public Builder subscriptionState(String subscriptionState) {
            this.subscriptionState = Optional.ofNullable(subscriptionState);

            return this;
        }

        public Builder subscriptionState(Optional<String> subscriptionState) {
            this.subscriptionState = subscriptionState;
            return this;
        }


        public V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem build() {
            return new V2SubscriptionStatusSetCreateBodySubscriptionGroupsItem(
                       emails,
                       subscriptionGroupId,
                       subscriptionState
                   );
        }
    }

}



