
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * UsersMergeCreateBody
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UsersMergeCreateBody.Builder.class)
public final class UsersMergeCreateBody {
    private final Optional<List<Map<?, ?>>> mergeUpdates;

    private UsersMergeCreateBody(
        Optional<List<Map<?, ?>>> mergeUpdates
    ) {
        this.mergeUpdates = mergeUpdates;
    }

    /**
     * Retrieves value for `mergeUpdates`
     */
    @JsonProperty("merge_updates")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public List<Map<?, ?>> getMergeUpdates() {
        return mergeUpdates.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof UsersMergeCreateBody && equalTo((UsersMergeCreateBody) other);
    }

    private boolean equalTo(UsersMergeCreateBody other) {
        return
            mergeUpdates.equals(other.mergeUpdates)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.mergeUpdates
               );
    }

    @Override
    public String toString() {
        return "UsersMergeCreateBody{" +
               "mergeUpdates=" + mergeUpdates +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<Map<?, ?>>> mergeUpdates = Optional.empty();

        private Builder() {}

        public Builder from(UsersMergeCreateBody other) {
            mergeUpdates(other.getMergeUpdates());
            return this;
        }

        /**
         * Sets value for `mergeUpdates`
         */
        @JsonSetter("merge_updates")
        public Builder mergeUpdates(List<Map<?, ?>> mergeUpdates) {
            this.mergeUpdates = Optional.ofNullable(mergeUpdates);

            return this;
        }

        public Builder mergeUpdates(Optional<List<Map<?, ?>>> mergeUpdates) {
            this.mergeUpdates = mergeUpdates;
            return this;
        }


        public UsersMergeCreateBody build() {
            return new UsersMergeCreateBody(
                       mergeUpdates
                   );
        }
    }

}



