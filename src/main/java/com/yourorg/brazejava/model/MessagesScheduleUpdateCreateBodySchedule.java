
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;


/**
 * MessagesScheduleUpdateCreateBodySchedule
 */
@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MessagesScheduleUpdateCreateBodySchedule.Builder.class)
public final class MessagesScheduleUpdateCreateBodySchedule {
    private final Optional<String> time;

    private MessagesScheduleUpdateCreateBodySchedule(
        Optional<String> time
    ) {
        this.time = time;
    }

    /**
     * Retrieves value for `time`
     */
    @JsonProperty("time")
    @JsonInclude(JsonInclude.Include.NON_ABSENT)
    public String getTime() {
        return time.orElse(null);
    }


    @Override
    public boolean equals(Object other) {
        if (this == other) { return true; }

        return other instanceof MessagesScheduleUpdateCreateBodySchedule &&
               equalTo((MessagesScheduleUpdateCreateBodySchedule) other);
    }

    private boolean equalTo(MessagesScheduleUpdateCreateBodySchedule other) {
        return
            time.equals(other.time)
            ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                   this.time
               );
    }

    @Override
    public String toString() {
        return "MessagesScheduleUpdateCreateBodySchedule{" +
               "time=" + time +
               '}';
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> time = Optional.empty();

        private Builder() {}

        public Builder from(MessagesScheduleUpdateCreateBodySchedule other) {
            time(other.getTime());
            return this;
        }

        /**
         * Sets value for `time`
         */
        @JsonSetter("time")
        public Builder time(String time) {
            this.time = Optional.ofNullable(time);

            return this;
        }

        public Builder time(Optional<String> time) {
            this.time = time;
            return this;
        }


        public MessagesScheduleUpdateCreateBodySchedule build() {
            return new MessagesScheduleUpdateCreateBodySchedule(
                       time
                   );
        }
    }

}



