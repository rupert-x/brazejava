
/**
 * Generated by Sideko (sideko.dev)
 **/


package com.yourorg.brazejava;

import java.util.function.Supplier;

import com.yourorg.brazejava.core.BaseClient;
import com.yourorg.brazejava.core.Suppliers;
import com.yourorg.brazejava.resources.campaigns.CampaignsClient;
import com.yourorg.brazejava.resources.canvas.CanvasClient;
import com.yourorg.brazejava.resources.catalogs.CatalogsClient;
import com.yourorg.brazejava.resources.contentblocks.ContentBlocksClient;
import com.yourorg.brazejava.resources.email.EmailClient;
import com.yourorg.brazejava.resources.events.EventsClient;
import com.yourorg.brazejava.resources.feed.FeedClient;
import com.yourorg.brazejava.resources.kpi.KpiClient;
import com.yourorg.brazejava.resources.messages.MessagesClient;
import com.yourorg.brazejava.resources.preferencecenter.PreferenceCenterClient;
import com.yourorg.brazejava.resources.preferencecenterv1.PreferenceCenterV1Client;
import com.yourorg.brazejava.resources.purchases.PurchasesClient;
import com.yourorg.brazejava.resources.scim.ScimClient;
import com.yourorg.brazejava.resources.segments.SegmentsClient;
import com.yourorg.brazejava.resources.sends.SendsClient;
import com.yourorg.brazejava.resources.sessions.SessionsClient;
import com.yourorg.brazejava.resources.sms.SmsClient;
import com.yourorg.brazejava.resources.subscription.SubscriptionClient;
import com.yourorg.brazejava.resources.templates.TemplatesClient;
import com.yourorg.brazejava.resources.transactional.TransactionalClient;
import com.yourorg.brazejava.resources.users.UsersClient;
import com.yourorg.brazejava.resources.v2.V2Client;


public class Client {

    protected final BaseClient baseClient;
    protected final Supplier<CatalogsClient> catalogs;
    protected final Supplier<ScimClient> scim;
    protected final Supplier<CampaignsClient> campaigns;
    protected final Supplier<CanvasClient> canvas;
    protected final Supplier<ContentBlocksClient> contentBlocks;
    protected final Supplier<EmailClient> email;
    protected final Supplier<EventsClient> events;
    protected final Supplier<FeedClient> feed;
    protected final Supplier<KpiClient> kpi;
    protected final Supplier<MessagesClient> messages;
    protected final Supplier<PreferenceCenterClient> preferenceCenter;
    protected final Supplier<PreferenceCenterV1Client> preferenceCenterV1;
    protected final Supplier<PurchasesClient> purchases;
    protected final Supplier<SegmentsClient> segments;
    protected final Supplier<SendsClient> sends;
    protected final Supplier<SessionsClient> sessions;
    protected final Supplier<SmsClient> sms;
    protected final Supplier<SubscriptionClient> subscription;
    protected final Supplier<TemplatesClient> templates;
    protected final Supplier<TransactionalClient> transactional;
    protected final Supplier<UsersClient> users;
    protected final Supplier<V2Client> v2;

    public Client(BaseClient baseClient) {
        this.baseClient = baseClient;
        this.catalogs = Suppliers.memoize(() -> new CatalogsClient(baseClient));
        this.scim = Suppliers.memoize(() -> new ScimClient(baseClient));
        this.campaigns = Suppliers.memoize(() -> new CampaignsClient(baseClient));
        this.canvas = Suppliers.memoize(() -> new CanvasClient(baseClient));
        this.contentBlocks = Suppliers.memoize(() -> new ContentBlocksClient(baseClient));
        this.email = Suppliers.memoize(() -> new EmailClient(baseClient));
        this.events = Suppliers.memoize(() -> new EventsClient(baseClient));
        this.feed = Suppliers.memoize(() -> new FeedClient(baseClient));
        this.kpi = Suppliers.memoize(() -> new KpiClient(baseClient));
        this.messages = Suppliers.memoize(() -> new MessagesClient(baseClient));
        this.preferenceCenter = Suppliers.memoize(() -> new PreferenceCenterClient(baseClient));
        this.preferenceCenterV1 = Suppliers.memoize(() -> new PreferenceCenterV1Client(baseClient));
        this.purchases = Suppliers.memoize(() -> new PurchasesClient(baseClient));
        this.segments = Suppliers.memoize(() -> new SegmentsClient(baseClient));
        this.sends = Suppliers.memoize(() -> new SendsClient(baseClient));
        this.sessions = Suppliers.memoize(() -> new SessionsClient(baseClient));
        this.sms = Suppliers.memoize(() -> new SmsClient(baseClient));
        this.subscription = Suppliers.memoize(() -> new SubscriptionClient(baseClient));
        this.templates = Suppliers.memoize(() -> new TemplatesClient(baseClient));
        this.transactional = Suppliers.memoize(() -> new TransactionalClient(baseClient));
        this.users = Suppliers.memoize(() -> new UsersClient(baseClient));
        this.v2 = Suppliers.memoize(() -> new V2Client(baseClient));
    }

    public CatalogsClient catalogs() {
        return this.catalogs.get();
    }

    public ScimClient scim() {
        return this.scim.get();
    }

    public CampaignsClient campaigns() {
        return this.campaigns.get();
    }

    public CanvasClient canvas() {
        return this.canvas.get();
    }

    public ContentBlocksClient contentBlocks() {
        return this.contentBlocks.get();
    }

    public EmailClient email() {
        return this.email.get();
    }

    public EventsClient events() {
        return this.events.get();
    }

    public FeedClient feed() {
        return this.feed.get();
    }

    public KpiClient kpi() {
        return this.kpi.get();
    }

    public MessagesClient messages() {
        return this.messages.get();
    }

    public PreferenceCenterClient preferenceCenter() {
        return this.preferenceCenter.get();
    }

    public PreferenceCenterV1Client preferenceCenterV1() {
        return this.preferenceCenterV1.get();
    }

    public PurchasesClient purchases() {
        return this.purchases.get();
    }

    public SegmentsClient segments() {
        return this.segments.get();
    }

    public SendsClient sends() {
        return this.sends.get();
    }

    public SessionsClient sessions() {
        return this.sessions.get();
    }

    public SmsClient sms() {
        return this.sms.get();
    }

    public SubscriptionClient subscription() {
        return this.subscription.get();
    }

    public TemplatesClient templates() {
        return this.templates.get();
    }

    public TransactionalClient transactional() {
        return this.transactional.get();
    }

    public UsersClient users() {
        return this.users.get();
    }

    public V2Client v2() {
        return this.v2.get();
    }

    public static ClientBuilder builder() {
        return new ClientBuilder();
    }

}
